{"remainingRequest":"C:\\Users\\saini\\Desktop\\event-front\\event-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\saini\\Desktop\\event-front\\event-front\\src\\components\\GoogleMap.vue?vue&type=style&index=0&id=177d06e3&lang=css&","dependencies":[{"path":"C:\\Users\\saini\\Desktop\\event-front\\event-front\\src\\components\\GoogleMap.vue","mtime":1674626388716},{"path":"C:\\Users\\saini\\Desktop\\event-front\\event-front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1673646904105},{"path":"C:\\Users\\saini\\Desktop\\event-front\\event-front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1673646917016},{"path":"C:\\Users\\saini\\Desktop\\event-front\\event-front\\node_modules\\postcss-loader\\src\\index.js","mtime":1673646908485},{"path":"C:\\Users\\saini\\Desktop\\event-front\\event-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1673646901215},{"path":"C:\\Users\\saini\\Desktop\\event-front\\event-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1673646912770}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLnBhYy1jb250YWluZXIgew0KICBwb3NpdGlvbjogYWJzb2x1dGU7DQogIHotaW5kZXg6IDEwMDAwMDA7DQp9DQo="},{"version":3,"sources":["GoogleMap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkGA;AACA;AACA;AACA","file":"GoogleMap.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n    <div>\r\n      <h2>Search and add a city</h2>\r\n      <label>\r\n        <gmap-autocomplete\r\n          @place_changed=\"setPlace\"\r\n          :options=\"autocompleteOptions\"\r\n          style=\"width: 400px; font-size: 20px\"\r\n        >\r\n        </gmap-autocomplete>\r\n        <!-- <button @click=\"addMarker\" type=\"button\">Add</button> -->\r\n      </label>\r\n      <br />\r\n    </div>\r\n    <br />\r\n    <gmap-map\r\n      :center=\"center\"\r\n      :zoom=\"15\"\r\n      style=\"width: 100%; height: 400px; display: none\"\r\n    >\r\n      <gmap-marker\r\n        :key=\"index\"\r\n        v-on:submit.prevent\r\n        v-for=\"(m, index) in markers\"\r\n        :position=\"m.position\"\r\n        @click=\"center = m.position\"\r\n      ></gmap-marker>\r\n    </gmap-map>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"GoogleMap\",\r\n\r\n  data() {\r\n    return {\r\n      // default to Montreal to keep it simple\r\n      // change this to whatever makes sense\r\n      center: { lat: 45.508, lng: -73.587 },\r\n      markers: [],\r\n      places: [],\r\n      currentPlace: null,\r\n      containerIntialised: false,\r\n      autocompleteOptions: {\r\n        componentRestrictions: {\r\n          country: [\"us\", \"ca\", \"ind\"],\r\n        },\r\n        types: [\"(cities)\"],\r\n      },\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    this.geolocate();\r\n  },\r\n\r\n  methods: {\r\n    // receives a place object via the autocomplete component\r\n    setPlace(place) {\r\n      this.currentPlace = place;\r\n      this.addMarker();\r\n    },\r\n    addMarker() {\r\n      if (this.currentPlace) {\r\n        console.log(\"currentPlace: \", this.currentPlace);\r\n        const marker = {\r\n          lat: this.currentPlace.geometry.location.lat(),\r\n          lng: this.currentPlace.geometry.location.lng(),\r\n        };\r\n        this.markers.push({ position: marker });\r\n        this.places.push(this.currentPlace);\r\n        this.center = marker;\r\n        this.$emit(\"added-address\", this.currentPlace);\r\n        this.currentPlace = null;\r\n      }\r\n    },\r\n    updateMarker(latitude, longitude) {\r\n      const marker = {\r\n        lat: latitude,\r\n        lng: longitude,\r\n      };\r\n      this.markers.push({ position: marker });\r\n      this.center = marker;\r\n    },\r\n    geolocate: function () {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        this.center = {\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude,\r\n        };\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style>\r\n.pac-container {\r\n  position: absolute;\r\n  z-index: 1000000;\r\n}\r\n</style>\r\n"]}]}