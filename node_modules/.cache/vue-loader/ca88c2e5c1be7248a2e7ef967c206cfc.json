{"remainingRequest":"C:\\Users\\saini\\Desktop\\event-front\\event-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\saini\\Desktop\\event-front\\event-front\\src\\components\\GoogleMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\saini\\Desktop\\event-front\\event-front\\src\\components\\GoogleMap.vue","mtime":1674626388716},{"path":"C:\\Users\\saini\\Desktop\\event-front\\event-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1673646901215},{"path":"C:\\Users\\saini\\Desktop\\event-front\\event-front\\node_modules\\babel-loader\\lib\\index.js","mtime":1673646908679},{"path":"C:\\Users\\saini\\Desktop\\event-front\\event-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1673646901215},{"path":"C:\\Users\\saini\\Desktop\\event-front\\event-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1673646912770}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJHb29nbGVNYXAiLA0KDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIC8vIGRlZmF1bHQgdG8gTW9udHJlYWwgdG8ga2VlcCBpdCBzaW1wbGUNCiAgICAgIC8vIGNoYW5nZSB0aGlzIHRvIHdoYXRldmVyIG1ha2VzIHNlbnNlDQogICAgICBjZW50ZXI6IHsgbGF0OiA0NS41MDgsIGxuZzogLTczLjU4NyB9LA0KICAgICAgbWFya2VyczogW10sDQogICAgICBwbGFjZXM6IFtdLA0KICAgICAgY3VycmVudFBsYWNlOiBudWxsLA0KICAgICAgY29udGFpbmVySW50aWFsaXNlZDogZmFsc2UsDQogICAgICBhdXRvY29tcGxldGVPcHRpb25zOiB7DQogICAgICAgIGNvbXBvbmVudFJlc3RyaWN0aW9uczogew0KICAgICAgICAgIGNvdW50cnk6IFsidXMiLCAiY2EiLCAiaW5kIl0sDQogICAgICAgIH0sDQogICAgICAgIHR5cGVzOiBbIihjaXRpZXMpIl0sDQogICAgICB9LA0KICAgIH07DQogIH0sDQoNCiAgbW91bnRlZCgpIHsNCiAgICB0aGlzLmdlb2xvY2F0ZSgpOw0KICB9LA0KDQogIG1ldGhvZHM6IHsNCiAgICAvLyByZWNlaXZlcyBhIHBsYWNlIG9iamVjdCB2aWEgdGhlIGF1dG9jb21wbGV0ZSBjb21wb25lbnQNCiAgICBzZXRQbGFjZShwbGFjZSkgew0KICAgICAgdGhpcy5jdXJyZW50UGxhY2UgPSBwbGFjZTsNCiAgICAgIHRoaXMuYWRkTWFya2VyKCk7DQogICAgfSwNCiAgICBhZGRNYXJrZXIoKSB7DQogICAgICBpZiAodGhpcy5jdXJyZW50UGxhY2UpIHsNCiAgICAgICAgY29uc29sZS5sb2coImN1cnJlbnRQbGFjZTogIiwgdGhpcy5jdXJyZW50UGxhY2UpOw0KICAgICAgICBjb25zdCBtYXJrZXIgPSB7DQogICAgICAgICAgbGF0OiB0aGlzLmN1cnJlbnRQbGFjZS5nZW9tZXRyeS5sb2NhdGlvbi5sYXQoKSwNCiAgICAgICAgICBsbmc6IHRoaXMuY3VycmVudFBsYWNlLmdlb21ldHJ5LmxvY2F0aW9uLmxuZygpLA0KICAgICAgICB9Ow0KICAgICAgICB0aGlzLm1hcmtlcnMucHVzaCh7IHBvc2l0aW9uOiBtYXJrZXIgfSk7DQogICAgICAgIHRoaXMucGxhY2VzLnB1c2godGhpcy5jdXJyZW50UGxhY2UpOw0KICAgICAgICB0aGlzLmNlbnRlciA9IG1hcmtlcjsNCiAgICAgICAgdGhpcy4kZW1pdCgiYWRkZWQtYWRkcmVzcyIsIHRoaXMuY3VycmVudFBsYWNlKTsNCiAgICAgICAgdGhpcy5jdXJyZW50UGxhY2UgPSBudWxsOw0KICAgICAgfQ0KICAgIH0sDQogICAgdXBkYXRlTWFya2VyKGxhdGl0dWRlLCBsb25naXR1ZGUpIHsNCiAgICAgIGNvbnN0IG1hcmtlciA9IHsNCiAgICAgICAgbGF0OiBsYXRpdHVkZSwNCiAgICAgICAgbG5nOiBsb25naXR1ZGUsDQogICAgICB9Ow0KICAgICAgdGhpcy5tYXJrZXJzLnB1c2goeyBwb3NpdGlvbjogbWFya2VyIH0pOw0KICAgICAgdGhpcy5jZW50ZXIgPSBtYXJrZXI7DQogICAgfSwNCiAgICBnZW9sb2NhdGU6IGZ1bmN0aW9uICgpIHsNCiAgICAgIG5hdmlnYXRvci5nZW9sb2NhdGlvbi5nZXRDdXJyZW50UG9zaXRpb24oKHBvc2l0aW9uKSA9PiB7DQogICAgICAgIHRoaXMuY2VudGVyID0gew0KICAgICAgICAgIGxhdDogcG9zaXRpb24uY29vcmRzLmxhdGl0dWRlLA0KICAgICAgICAgIGxuZzogcG9zaXRpb24uY29vcmRzLmxvbmdpdHVkZSwNCiAgICAgICAgfTsNCiAgICAgIH0pOw0KICAgIH0sDQogIH0sDQp9Ow0K"},{"version":3,"sources":["GoogleMap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GoogleMap.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n    <div>\r\n      <h2>Search and add a city</h2>\r\n      <label>\r\n        <gmap-autocomplete\r\n          @place_changed=\"setPlace\"\r\n          :options=\"autocompleteOptions\"\r\n          style=\"width: 400px; font-size: 20px\"\r\n        >\r\n        </gmap-autocomplete>\r\n        <!-- <button @click=\"addMarker\" type=\"button\">Add</button> -->\r\n      </label>\r\n      <br />\r\n    </div>\r\n    <br />\r\n    <gmap-map\r\n      :center=\"center\"\r\n      :zoom=\"15\"\r\n      style=\"width: 100%; height: 400px; display: none\"\r\n    >\r\n      <gmap-marker\r\n        :key=\"index\"\r\n        v-on:submit.prevent\r\n        v-for=\"(m, index) in markers\"\r\n        :position=\"m.position\"\r\n        @click=\"center = m.position\"\r\n      ></gmap-marker>\r\n    </gmap-map>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"GoogleMap\",\r\n\r\n  data() {\r\n    return {\r\n      // default to Montreal to keep it simple\r\n      // change this to whatever makes sense\r\n      center: { lat: 45.508, lng: -73.587 },\r\n      markers: [],\r\n      places: [],\r\n      currentPlace: null,\r\n      containerIntialised: false,\r\n      autocompleteOptions: {\r\n        componentRestrictions: {\r\n          country: [\"us\", \"ca\", \"ind\"],\r\n        },\r\n        types: [\"(cities)\"],\r\n      },\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    this.geolocate();\r\n  },\r\n\r\n  methods: {\r\n    // receives a place object via the autocomplete component\r\n    setPlace(place) {\r\n      this.currentPlace = place;\r\n      this.addMarker();\r\n    },\r\n    addMarker() {\r\n      if (this.currentPlace) {\r\n        console.log(\"currentPlace: \", this.currentPlace);\r\n        const marker = {\r\n          lat: this.currentPlace.geometry.location.lat(),\r\n          lng: this.currentPlace.geometry.location.lng(),\r\n        };\r\n        this.markers.push({ position: marker });\r\n        this.places.push(this.currentPlace);\r\n        this.center = marker;\r\n        this.$emit(\"added-address\", this.currentPlace);\r\n        this.currentPlace = null;\r\n      }\r\n    },\r\n    updateMarker(latitude, longitude) {\r\n      const marker = {\r\n        lat: latitude,\r\n        lng: longitude,\r\n      };\r\n      this.markers.push({ position: marker });\r\n      this.center = marker;\r\n    },\r\n    geolocate: function () {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        this.center = {\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude,\r\n        };\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style>\r\n.pac-container {\r\n  position: absolute;\r\n  z-index: 1000000;\r\n}\r\n</style>\r\n"]}]}