{"remainingRequest":"C:\\Users\\saini\\Desktop\\VikasProject\\event-frontend-latest\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\saini\\Desktop\\VikasProject\\event-frontend-latest\\src\\views\\addEvent.vue?vue&type=template&id=23cea013&scoped=true&","dependencies":[{"path":"C:\\Users\\saini\\Desktop\\VikasProject\\event-frontend-latest\\src\\views\\addEvent.vue","mtime":1671138318905},{"path":"C:\\Users\\saini\\Desktop\\VikasProject\\event-frontend-latest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1673646901215},{"path":"C:\\Users\\saini\\Desktop\\VikasProject\\event-frontend-latest\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1673646917331},{"path":"C:\\Users\\saini\\Desktop\\VikasProject\\event-frontend-latest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1673646901215},{"path":"C:\\Users\\saini\\Desktop\\VikasProject\\event-frontend-latest\\node_modules\\vue-loader\\lib\\index.js","mtime":1673646912770}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}