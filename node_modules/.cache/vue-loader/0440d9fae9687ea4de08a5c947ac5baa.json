{"remainingRequest":"C:\\Users\\saini\\Desktop\\event-front\\event-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\saini\\Desktop\\event-front\\event-front\\src\\views\\RsvpPage.vue?vue&type=template&id=32aa1f24&scoped=true&","dependencies":[{"path":"C:\\Users\\saini\\Desktop\\event-front\\event-front\\src\\views\\RsvpPage.vue","mtime":1673654524702},{"path":"C:\\Users\\saini\\Desktop\\event-front\\event-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1673646901215},{"path":"C:\\Users\\saini\\Desktop\\event-front\\event-front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1673646917331},{"path":"C:\\Users\\saini\\Desktop\\event-front\\event-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1673646901215},{"path":"C:\\Users\\saini\\Desktop\\event-front\\event-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1673646912770}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:
  <div>
    <div class="page-wraper">
      <!-- header -->
      <Header />
      <!-- header End -->
      <!-- Content -->
      <div class="page-content bg-white">
        <!-- Section Banner -->
        <div
          class="dlab-bnr-inr text-center dlab-bnr-inr-sm overlay-black-dark"
          style="
            background-image: url(images/main-slider/slide1.jpg);
            background-size: cover;
          "
          id="app-banner"
        >
          <div class="container">
            <div class="dlab-bnr-inr-entry align-m dlab-home">
              <div class="bnr-content">
                <div class="wedding-details">
                  <div class="wedding-info wedding-info-left">
                    <h2 class="wedding-name">Kuldeep Gaur</h2>
                    <div class="wedding-img">
                      <img src="images/testimonials/pic1.jpg" alt="" />
                    </div>
                  </div>
                  <div class="wedding-heart">
                    <i class="fa fa-heart"></i>
                  </div>
                  <div class="wedding-info wedding-info-right">
                    <div class="wedding-img">
                      <img src="images/testimonials/pic2.jpg" alt="" />
                    </div>
                    <h2 class="wedding-name">Deepika Sharma</h2>
                  </div>
                </div>
                <div class="wedding-location">
                  <a href="settings.html" class="location-name"
                    >London <i class="fa fa-pencil m-l5"></i
                  ></a>
                  <p class="location-info">
                    A Sunday in November 2019 157 days to go!
                  </p>
                </div>
              </div>
            </div>
          </div>
          <!-- Search Filter -->
          <div class="search-filter">
            <div class="container">
              <form class="filter-form" action="wedding-venues-search.html">
                <div class="row">
                  <div class="col-lg-4 col-md-4 col-sm-6 col-6">
                    <input
                      type="text"
                      class="form-control"
                      placeholder="We’re looking for"
                    />
                  </div>
                  <div class="col-lg-3 col-md-3 col-sm-6 col-6">
                    <input
                      type="text"
                      class="form-control"
                      placeholder="Near"
                    />
                  </div>
                  <div class="col-lg-3 col-md-3 col-sm-6 col-6">
                    <input
                      type="text"
                      class="form-control"
                      placeholder="Or Called"
                    />
                  </div>
                  <div class="col-lg-2 col-md-2 col-sm-6 col-6 d-flex">
                    <button class="btn btn-block gradient text-uppercase">
                      Search
                    </button>
                  </div>
                </div>
              </form>
            </div>
          </div>
          <!-- Search Filter END -->
        </div>
        <!-- Section Banner END -->
        <!-- Manager Tools -->
        <div class="section-full bg-white plan-tools-bx">
          <div class="section-head text-center">
            <h2 class="title">Hello {{ guestFullName }}</h2>
            <p>
              You have been invited for following events. Please find details of
              each event, confirm number of guests, and RSVP.
            </p>
          </div>
        </div>
        <!-- Manager Tools End -->
        <!-- contact area -->

        <div class="container">
          <div class="row">
            <vue-tabs
              @tab-change="openDetails"
              active-tab-color="rgb(89, 70, 243)"
              active-text-color="white"
              id="invite_edit_tab"
            >
              <v-tab
                v-for="(invite, index) of invites"
                v-if="invite.invited === true"
                v-bind:key="invite.eventId"
                :title="invite.title"
                icon="ti-user"
                style="padding-top: 30px"
              >
                <!--  <div class="details-media-bx">
                  <div class="featured-info">
                    <h4 class="title">{{ subeventDetails.title }}</h4>
                    <p class="address">
                      <i class="fa fa-map-marker m-r5 text-primary"></i>
                     
                      {{
                        subeventDetails.location &&
                          subeventDetails.location.address +
                            ", " +
                            subeventDetails.location.city +
                            ", " +
                            subeventDetails.location.state +
                            ", " +
                            subeventDetails.location.country +
                            ", " +
                            subeventDetails.location.postalCode
                      }}
                    </p>
                    <p class="address">
                      {{ formatDate(subeventDetails.fromDate) }}
                    </p> -->
                <!-- <ul class="featured-star">
                              <li><i class="fa fa-star"></i></li>
                              <li><i class="fa fa-star"></i></li>
                              <li><i class="fa fa-star"></i></li>
                              <li><i class="fa fa-star"></i></li>
                              <li><i class="fa fa-star"></i></li>
                            </ul> -->
                <!-- </div> -->
                <!-- <div class="featured-lists">
                          <ul class="navbar">
                            <li>
                              <a href="#price" class="scroll nav-link"
                                ><i class="la la-money"></i>&#36;{{
                                  subeventDetails.budget &&
                                    addCommas(String(subeventDetails.budget))
                                }}</a
                              >
                            </li>
                            <li>
                              <a href="#upto" class="scroll nav-link"
                                ><i class="la la-users"></i
                                >{{
                                  subeventDetails.estimatedGuests &&
                                    addCommas(
                                      String(subeventDetails.estimatedGuests)
                                    )
                                }}</a
                              >
                            </li>
                            <li>
                              <a href="#upto" class="scroll nav-link"
                                ><i class="la la-bed"></i>9 Bedrooms</a
                              >
                            </li>
                            <li>
                              <a href="#upto" class="scroll nav-link"
                                ><i class="la la-diamond"></i>Exclusive Use</a
                              >
                            </li>
                            <li>
                              <a href="#upto" class="scroll nav-link"
                                ><i class="la la-pencil"></i>Wedding Licence</a
                              >
                            </li>
                          </ul>
                        </div> -->
                <!-- <div class="featured-media">
                          <div class="featured-gallery">
                            <img src="images/blog/default/thum3.jpg" alt="" />
                            <button class="lightGalleryButton">
                              <i class="fa fa-picture-o"></i> View Photos (12)
                            </button>
                          </div>
                        </div> 
                </div>-->

                <!-- <div class="form-group row">
                    <div
                      v-if="invite.inviteStatus != 'INVITED'"
                      class="col-md-3"
                    >
                      <label class="label-title">Invite</label>
                    </div>
                    <div
                      v-if="invite.inviteStatus != 'INVITED'"
                      class="col-md-3"
                    >
                      <div
                        class="btn-group-toggle btn-select"
                        data-toggle="buttons"
                      >
                        <label
                          :class="invite.invited ? 'btn active' : 'btn'"
                          @click="changeInviteStatus(index, true)"
                        >
                          <input
                            type="radio"
                            value="1"
                            autocomplete="off"
                            checked=""
                          /><i class="fa fa-check"></i> Yes
                        </label>
                        <label
                          :class="!invite.invited ? 'btn active' : 'btn'"
                          @click="changeInviteStatus(index, false)"
                        >
                          <input type="radio" value="0" autocomplete="off" /><i
                            class="fa fa-close"
                          ></i>
                          No
                        </label>
                      </div>
                    </div>
                    <div class="col-md-6">
                      <label class="label-title"
                        >Invite Status: {{ invite.inviteStatus }}</label
                      >
                    </div>
                    <div class="col-md-6">
                      <label class="label-title"
                        >RSVP Status: {{ invite.rsvpStatus }}</label
                      >
                    </div>
                  </div> -->
                <div
                  class="section-full content-inner wedding-venues-details bg-gray"
                >
                  <div class="container">
                    <div class="row">
                      <!-- Left part start -->
                      <div class="col-xl-8 col-lg-7 col-md-12 p-b30">
                        <div class="details-media-bx">
                          <div class="featured-info">
                            <h4 class="title">{{ subeventDetails.title }}</h4>
                            <p class="address">
                              <i class="fa fa-map-marker m-r5 text-primary"></i>
                              {{
                                subeventDetails.location &&
                                subeventDetails.location.address +
                                  ", " +
                                  subeventDetails.location.city +
                                  ", " +
                                  subeventDetails.location.state +
                                  ", " +
                                  subeventDetails.location.country +
                                  ", " +
                                  subeventDetails.location.postalCode
                              }}
                            </p>
                            <p class="address">
                              <i class="fa fa-calender"></i>
                              {{ formatDate(subeventDetails.fromDate) }}
                            </p>
                            <ul class="featured-star">
                              <li><i class="fa fa-star"></i></li>
                              <li><i class="fa fa-star"></i></li>
                              <li><i class="fa fa-star"></i></li>
                              <li><i class="fa fa-star"></i></li>
                              <li><i class="fa fa-star"></i></li>
                            </ul>
                          </div>
                          <div class="featured-lists">
                            <ul class="navbar">
                              <li>
                                <a href="#price" class="scroll nav-link"
                                  ><i class="la la-money"></i>£2999 - £5799 for
                                  Venue Hire</a
                                >
                              </li>
                              <li>
                                <a href="#upto" class="scroll nav-link"
                                  ><i class="la la-users"></i>Up to 200</a
                                >
                              </li>
                              <li>
                                <a href="#upto" class="scroll nav-link"
                                  ><i class="la la-bed"></i>9 Bedrooms</a
                                >
                              </li>
                              <li>
                                <a href="#upto" class="scroll nav-link"
                                  ><i class="la la-diamond"></i>Exclusive Use</a
                                >
                              </li>
                              <li>
                                <a href="#upto" class="scroll nav-link"
                                  ><i class="la la-pencil"></i>Wedding
                                  Licence</a
                                >
                              </li>
                            </ul>
                          </div>
                          <div class="featured-media">
                            <div class="featured-gallery">
                              <img src="images/blog/default/thum3.jpg" alt="" />
                              <button class="lightGalleryButton">
                                <i class="fa fa-picture-o"></i> View Photos (12)
                              </button>
                            </div>
                          </div>
                        </div>

                        <h5 class="text-quote">
                          {{ subeventDetails.shortDescription }}
                        </h5>
                      </div>
                      <!-- Left part END -->
                      <!-- Side bar start -->
                      <div class="col-xl-4 col-lg-5 col-md-12">
                        <aside class="side-bar listing-side-bar">
                          <div class="venues-sidebar-info">
                            <div class="title-head">
                              <h5 class="title">Please find your details</h5>
                            </div>
                            <small class="small-bx"
                              >We will pass your details to the supplier so they
                              can get back to you with a proposal.</small
                            >
                            <ul class="vender-profile-list">
                              <li>
                                <a
                                  data-toggle="modal"
                                  data-target="#edit-details"
                                  class="btn edit"
                                  href="javascript:;"
                                  >Edit <i class="fa fa-pencil"></i
                                ></a>
                              </li>
                              <li>
                                <strong>Email:</strong>
                                {{ guestData.appUser.email }}
                              </li>
                              <li>
                                <strong>Phone:</strong>
                                {{ guestData.appUser.phone }}
                              </li>
                              <li>
                                <strong>Name(s):</strong>
                                {{ guestData.appUser.firstName }}
                                {{ guestData.appUser.lastName }}
                              </li>
                              <li>
                                <strong>Your Address:</strong>
                                {{ guestData.appUser.address.address }},
                                {{ guestData.appUser.address.city }},
                                {{ guestData.appUser.address.state }},
                                {{ guestData.appUser.address.country }},
                                {{ guestData.appUser.address.postalCode }}
                              </li>
                              <!-- <li><strong>Estimated guests:</strong> 80</li> -->
                            </ul>
                            <div class="text-message">
                              <div class="title-head">
                                <h5 class="title">Note From Host</h5>
                              </div>
                              <small class="small-bx"
                                >Please add notes that you want to send to
                                host</small
                              >
                              <form>
                                <textarea
                                  v-model="invite.notes"
                                  class="form-control"
                                  >{{ invite.notes }}
						                    </textarea
                                >
                              </form>
                            </div>
                          </div>
                        </aside>
                        <!-- <aside class="side-bar listing-side-bar sticky-top">
                          <ul class="vender-details-form">
                            <li class="btn-group-toggle" data-toggle="buttons">
                              <label class="btn booked-btn">
                                <i class="icon1 fa fa-thumbs-up"></i>
                                <i class="icon2 fa fa-thumbs-o-up"></i>
                                <input
                                  type="checkbox"
                                  name="options"
                                  id="option1"
                                  checked=""
                                />
                                <span class="show1">Mark as booked</span>
                                <span class="show2">Booked</span>
                              </label>
                            </li>
                            <li class="btn-group-toggle" data-toggle="buttons">
                              <label class="btn shortlist-btn">
                                <i class="icon1 fa fa-heart"></i>
                                <i class="icon2 fa fa-heart-o"></i>
                                <input
                                  type="checkbox"
                                  name="options"
                                  id="option2"
                                />
                                <span class="show1">Shortlisted</span>
                                <span class="show2">Add to shortlist</span>
                              </label>
                            </li>
                            <li>
                              <a
                                href="javascript:;"
                                data-toggle="modal"
                                data-target="#writeReviews"
                                class="btn reviews-btn"
                              >
                                <i class="fa fa-star-o"></i>
                                <span>Write a Reviews</span>
                              </a>
                            </li>

                            <li>
                              <a
                                href="javascript:;"
                                data-toggle="modal"
                                data-target="#contactSupplier"
                                class="btn"
                              >
                                <i class="fa fa-envelope-o"></i>
                                <span>Contact supplier</span>
                              </a>
                            </li>
                            <li>
                              <a
                                href="javascript:;"
                                data-toggle="modal"
                                data-target="#exampleModal2"
                                class="btn showround-btn"
                              >
                                <i class="fa fa-gift"></i>
                                <span>Request showround</span>
                              </a>
                            </li>
                          </ul>
                        </aside> -->
                      </div>
                      <!-- Side bar END -->
                    </div>
                  </div>
                </div>
                <div class="col-md-12 form-group row">
                  <label class="label-title">I will be : </label>
                  <div
                    class="btn-group-toggle btn-select"
                    data-toggle="buttons"
                  >
                    <label
                      @click="changeRSVPStatus(index, 'ATTENDING')"
                      :class="
                        invite.rsvpStatus === 'ATTENDING' ||
                        invite.rsvpStatus === 'UNCONFIRMED'
                          ? 'btn active'
                          : 'btn'
                      "
                    >
                      <input
                        type="radio"
                        name="options"
                        id="Yes"
                        autocomplete="off"
                        checked=""
                      /><i class="fa fa-check"></i> Attending
                    </label>
                    <label
                      @click="changeRSVPStatus(index, 'NOTATTENDING')"
                      :class="
                        invite.rsvpStatus === 'NOTATTENDING'
                          ? 'btn active'
                          : 'btn'
                      "
                    >
                      <input
                        type="radio"
                        name="options"
                        id="No"
                        autocomplete="off"
                      /><i class="fa fa-close"></i> Not Attending
                    </label>
                    <label
                      @click="changeRSVPStatus(index, 'MAYBE')"
                      :class="
                        invite.rsvpStatus === 'MAYBE' ? 'btn active' : 'btn'
                      "
                    >
                      <input
                        type="radio"
                        name="options"
                        id="Reply"
                        autocomplete="off"
                      /><i class="fa fa-clock-o"></i> Maybe Attending
                    </label>
                  </div>
                  <div class="col-md-2">
                    <label class="label-title"
                      >I will be bringing Guest(s)</label
                    >
                  </div>
                  <div class="col-md-4">
                    <input
                      type="number"
                      class="form-control"
                      placeholder="Confirm Guests"
                      min="0"
                      v-model="invite.actualGuests"
                      :disabled="disableInput(invite.rsvpStatus)"
                    />
                  </div>
                </div>
              </v-tab>
              <a
                href="javascript:;"
                data-toggle="modal"
                data-target="#exampleModal2"
                class="btn gradient"
                @click="rsvpSubmit"
                >Save & RSVP</a
              >
            </vue-tabs>
          </div>

          <div class="col-lg-12 col-md-12 col-sm-12">
            <div class="section-full wedding-venues-details bg-gray">
              <div class="container">
                <div class="row">
                  <!-- Left part start -->
                  <div class="col-xl-12 col-lg-12 col-md-12 p-b30">
                    <!-- Full Description -->
                    <!-- <h5 class="details-title">Event Information</h5> -->
                    <div class="description-box">
                      <!-- <p>
                        {{
                          subeventDetails.shortDescription &&
                            subeventDetails.shortDescription
                        }}
                      </p> -->

                      <div class="dlab-divider bg-gray-dark">
                        <i class="icon-dot c-square"></i>
                      </div>
                      <h4 class="title">Personal Message from the Manager</h4>
                      <p>Name of Wedding Contact: Chanon deValois</p>
                      <p>
                        Hello, May I take this opportunity to wish you
                        congratulations on your engagement! This is such an
                        exciting time and I know from experience that sometimes
                        it feels like there is so much to do. My aim is to
                        provide you with friendly and professional service. I
                        provide clear and open pricing, no hidden agenda or
                        unexpected extras. My half day coverage starts at £600
                        and full day £1200. Please email me to find out more. I
                        look forward to hearing from you.
                      </p>
                    </div>
                    <!-- Full Description End -->
                    <a
                      href="javascript:;"
                      data-toggle="modal"
                      data-target="#exampleModal2"
                      class="btn btn-block gradient green m-b30"
                      >Request a quote</a
                    >
                    <h5 class="text-quote">
                      Matt Wing is a professional and talented photographer who
                      has an eye for the special moments in your day that could
                      easily go unseen by other photographers. His gorgeous
                      photography speaks for itself!
                    </h5>
                    <div class="row sp20">
                      <div class="col-md-6 m-b20">
                        <div
                          class="card-bx red h100"
                          data-toggle="modal"
                          data-target="#deal"
                        >
                          <div class="inner">
                            <span class="tag-btn"
                              >Exclusive Wedding Manager Deal</span
                            >
                            <h6 class="title">
                              Wedding Manager Couple Discount
                            </h6>
                            <p>
                              SENSATIONAL special offer for all remaining 2019
                              weekend dates: £6,199 (incl. VAT) catering for 80
                              day guests/a total of 100 evening guests; DJ
                            </p>
                          </div>
                        </div>
                      </div>
                      <div class="col-md-6 m-b20">
                        <div
                          class="card-bx blue h100"
                          data-toggle="modal"
                          data-target="#deal"
                        >
                          <div class="inner">
                            <span class="tag-btn">Wedding Manager Deal</span>
                            <h6 class="title">Seasonal Offer Available</h6>
                            <p>Save £800</p>
                          </div>
                        </div>
                      </div>
                      <div class="col-md-6 m-b20">
                        <div
                          class="card-bx green h100"
                          data-toggle="modal"
                          data-target="#deal"
                        >
                          <div class="inner">
                            <span class="tag-btn"
                              >Exclusive Wedding Manager Deal</span
                            >
                            <h6 class="title">
                              Wedding Manager Couple Discount
                            </h6>
                            <p>Save £800</p>
                          </div>
                        </div>
                      </div>
                      <div class="col-md-6 m-b20">
                        <div
                          class="card-bx yellow h100"
                          data-toggle="modal"
                          data-target="#deal"
                        >
                          <div class="inner">
                            <span class="tag-btn"
                              >Exclusive Wedding Manager Deal</span
                            >
                            <h6 class="title">
                              Wedding Manager Couple Discount
                            </h6>
                            <p>Save £800</p>
                          </div>
                        </div>
                      </div>
                    </div>

                    <!-- Pricing & Costs -->
                    <h5 class="details-title" id="price">Pricing & Costs</h5>
                    <div class="pricing-costs-box">
                      <h5 class="title">Prices start at</h5>
                      <h2 class="price">£1200</h2>
                      <div class="row sp20">
                        <div class="col-md-6 m-b20">
                          <div class="pricost-box">
                            <h5 class="pricost-title">
                              <i class="la la-institution"></i>Venue Hire Only
                            </h5>
                            <div class="card-bx red bordered">
                              <div class="inner">
                                <ul class="deal-list">
                                  <li>
                                    <span>Prices Start At</span>
                                    <strong>£2,999</strong>
                                  </li>
                                  <li>
                                    <span>Prices Start At</span>
                                    <strong>£5,799</strong>
                                  </li>
                                </ul>
                              </div>
                            </div>
                            <p class="pricost-content readmore">
                              Our venue-only hire includes tables/chairs. You
                              choose from our list of six caterers.
                              Alternatively, our packages include a Anim
                              pariatur cliche reprehenderit, enim eiusmod high
                              life accusamus terry richardson ad squid. Nihil
                              anim keffiyeh helvetica, craft beer labore wes
                              anderson cred nesciunt sapiente ea proident.
                              <span class="btn-link">Read More</span>
                            </p>
                          </div>
                        </div>
                        <div class="col-md-6 m-b20">
                          <div class="pricost-box">
                            <h5 class="pricost-title">
                              <i class="la la-institution"></i>In-house catering
                              <span>(Price Per Head)</span>
                            </h5>
                            <div class="card-bx green bordered">
                              <div class="inner">
                                <ul class="deal-list">
                                  <li>
                                    <span>Prices Start At</span>
                                    <strong>£2,999</strong>
                                  </li>
                                  <li>
                                    <span>Prices Start At</span>
                                    <strong>£5,799</strong>
                                  </li>
                                </ul>
                              </div>
                            </div>
                            <p class="pricost-content">
                              Our venue-only hire includes tables/chairs. You
                              choose from our list of six caterers.
                              Alternatively, our packages include a
                              <span class="collapse" id="dec4"
                                >Anim pariatur cliche reprehenderit, enim
                                eiusmod high life accusamus terry richardson ad
                                squid. Nihil anim keffiyeh helvetica, craft beer
                                labore wes anderson cred nesciunt sapiente ea
                                proident.</span
                              >
                              <a
                                class="btn-link"
                                data-toggle="collapse"
                                href="#dec4"
                                role="button"
                                aria-expanded="false"
                                aria-controls="collapseExample"
                              >
                                Read More
                              </a>
                            </p>
                          </div>
                        </div>
                        <div class="col-md-6 m-b20">
                          <div class="pricost-box">
                            <h5 class="pricost-title">
                              <i class="la la-gift"></i>Packages
                            </h5>
                            <div class="card-bx yellow bordered">
                              <div class="inner">
                                <ul class="deal-list">
                                  <li>
                                    <span>Prices Start At</span>
                                    <strong>£2,999</strong>
                                  </li>
                                  <li>
                                    <span>Prices Start At</span>
                                    <strong>£5,799</strong>
                                  </li>
                                </ul>
                              </div>
                            </div>
                            <p class="pricost-content">
                              Our venue-only hire includes tables/chairs. You
                              choose from our list of six caterers.
                              Alternatively, our packages include a
                              <span class="collapse" id="dec3"
                                >Anim pariatur cliche reprehenderit, enim
                                eiusmod high life accusamus terry richardson ad
                                squid. Nihil anim keffiyeh helvetica, craft beer
                                labore wes anderson cred nesciunt sapiente ea
                                proident.</span
                              >
                              <a
                                class="btn-link"
                                data-toggle="collapse"
                                href="#dec3"
                                role="button"
                                aria-expanded="false"
                                aria-controls="collapseExample"
                              >
                                Read More
                              </a>
                            </p>
                          </div>
                        </div>
                        <div class="col-md-6 m-b20">
                          <div class="pricost-box">
                            <h5 class="pricost-title">
                              <i class="la la-gift"></i>Venue Hire Only
                            </h5>
                            <div class="card-bx blue bordered">
                              <div class="inner">
                                <ul class="deal-list">
                                  <li>
                                    <span>Prices Start At</span>
                                    <strong>£2,999</strong>
                                  </li>
                                  <li>
                                    <span>Prices Start At</span>
                                    <strong>£5,799</strong>
                                  </li>
                                </ul>
                              </div>
                            </div>
                            <p class="pricost-content">
                              Our venue-only hire includes tables/chairs. You
                              choose from our list of six caterers.
                              Alternatively, our packages include a
                              <span class="collapse" id="dec2"
                                >Anim pariatur cliche reprehenderit, enim
                                eiusmod high life accusamus terry richardson ad
                                squid. Nihil anim keffiyeh helvetica, craft beer
                                labore wes anderson cred nesciunt sapiente ea
                                proident.</span
                              >
                              <a
                                class="btn-link"
                                data-toggle="collapse"
                                href="#dec2"
                                role="button"
                                aria-expanded="false"
                                aria-controls="collapseExample"
                              >
                                Read More
                              </a>
                            </p>
                          </div>
                        </div>
                      </div>
                      <a
                        href="javascript:;"
                        data-toggle="modal"
                        data-target="#exampleModal2"
                        class="btn gradient"
                        >Request a quote</a
                      >
                    </div>
                    <!-- Pricing & Costs End -->

                    <h5 class="details-title" id="upto">Features & Capacity</h5>
                    <div class="row sp20">
                      <div class="col-md-6 m-b20">
                        <div class="card-bx border-bx white">
                          <div class="iconbx">
                            <i class="la la-home"></i>
                          </div>
                          <div class="inner">
                            <ul class="deal-list">
                              <li>
                                <span>Prices Start At</span>
                                <strong>£2,999</strong>
                              </li>
                            </ul>
                          </div>
                        </div>
                      </div>
                      <div class="col-md-6 m-b20">
                        <div class="card-bx border-bx white">
                          <div class="iconbx">
                            <i class="la la-clock-o"></i>
                          </div>
                          <div class="inner">
                            <ul class="deal-list">
                              <li>
                                <span>Prices Start At</span>
                                <strong>£2,999</strong>
                              </li>
                              <li>
                                <span>Prices Start At</span>
                                <strong>£5,799</strong>
                              </li>
                            </ul>
                          </div>
                        </div>
                      </div>
                      <div class="col-md-6 m-b20">
                        <div class="card-bx border-bx white">
                          <div class="iconbx">
                            <i class="la la-users"></i>
                          </div>
                          <div class="inner">
                            <ul class="deal-list">
                              <li>
                                <span>Prices Start At</span>
                                <strong>£2,999</strong>
                              </li>
                              <li>
                                <span>Prices Start At</span>
                                <strong>£5,799</strong>
                              </li>
                              <li>
                                <span>Prices Start At</span>
                                <strong>£5,799</strong>
                              </li>
                            </ul>
                          </div>
                        </div>
                      </div>
                      <div class="col-md-6 m-b20">
                        <div class="card-bx border-bx white">
                          <div class="iconbx">
                            <i class="la la-bed"></i>
                          </div>
                          <div class="inner">
                            <ul class="deal-list">
                              <li>
                                <span>Prices Start At</span>
                                <strong>£2,999</strong>
                              </li>
                              <li>
                                <span>Prices Start At</span>
                                <strong>£5,799</strong>
                              </li>
                            </ul>
                          </div>
                        </div>
                      </div>
                    </div>
                    <!-- Pricing & Costs End -->
                    <h5 class="details-title">Details</h5>
                    <div class="inner-content-bx">
                      <div class="details-list">
                        <h5 class="title">Products and Services</h5>
                        <ul class="list-check primary clearfix list-2">
                          <li>Wedding Hall</li>
                          <li>Dining</li>
                          <li>Liability Insurance</li>
                          <li>In House Catering</li>
                          <li>Dining</li>
                          <li>DJ Facilities</li>
                          <li>Personal Chef</li>
                          <li>Guest Parking</li>
                          <li>Seating Amenities</li>
                          <li>Parking</li>
                        </ul>
                      </div>
                      <div class="details-list">
                        <h5 class="title">Photography Style</h5>
                        <ul class="list-check primary clearfix list-2">
                          <li>Wedding Hall</li>
                          <li>Dining</li>
                          <li>Liability Insurance</li>
                          <li>In House Catering</li>
                          <li>Dining</li>
                          <li>DJ Facilities</li>
                          <li>Personal Chef</li>
                          <li>Guest Parking</li>
                          <li>Seating Amenities</li>
                          <li>Parking</li>
                        </ul>
                      </div>
                    </div>
                    <!-- Details -->

                    <!-- Reviews -->
                    <h5 class="details-title">
                      Reviews (8)
                      <button
                        type="button"
                        data-toggle="modal"
                        data-target="#writeReviews"
                        class="btn btn-sm float-right"
                      >
                        + Add a review
                      </button>
                    </h5>
                    <div class="no-review">
                      <img src="images/icon/no-review1.png" alt="" />
                      <h4 class="title">No Review Yet</h4>
                      <p>
                        Be the first one to tell everyone about the experience
                        you,ve had with this supplier
                      </p>
                      <button
                        type="button"
                        data-toggle="modal"
                        data-target="#writeReviews"
                        class="btn green"
                      >
                        + Add a review
                      </button>
                    </div>
                    <div class="venues-reviews-box">
                      <div class="venues-reviews">
                        <div class="reviews-info">
                          <div class="reviews-user">
                            <h6 class="reviewer-name">Fran & Josh</h6>
                            <h6 class="wedding-date">
                              Married in November 2018
                            </h6>
                          </div>
                          <div class="reviews-rating">
                            <ul class="rating">
                              <li><i class="fa fa-star"></i></li>
                              <li><i class="fa fa-star"></i></li>
                              <li><i class="fa fa-star"></i></li>
                              <li><i class="fa fa-star"></i></li>
                              <li><i class="fa fa-star"></i></li>
                            </ul>
                            <h6 class="review-date">January 2019</h6>
                          </div>
                        </div>
                        <div class="reviews-content">
                          <div class="review-media">
                            <img src="images/review/thum3.jpg" alt="" />
                          </div>
                          <h5 class="title">The best photographer!!!</h5>
                          <p>
                            The best photographer any bride ( especially one who
                            does not like her photo being taken!) could ask for!
                            Can not thank you enough Chanon.
                          </p>
                        </div>
                      </div>
                      <div class="venues-reviews">
                        <div class="reviews-info">
                          <div class="reviews-user">
                            <h6 class="reviewer-name">Fran & Josh</h6>
                            <h6 class="wedding-date">
                              Married in November 2018
                            </h6>
                          </div>
                          <div class="reviews-rating">
                            <ul class="rating">
                              <li><i class="fa fa-star"></i></li>
                              <li><i class="fa fa-star"></i></li>
                              <li><i class="fa fa-star"></i></li>
                              <li><i class="fa fa-star"></i></li>
                              <li><i class="fa fa-star"></i></li>
                            </ul>
                            <h6 class="review-date">January 2019</h6>
                          </div>
                        </div>
                        <div class="reviews-content">
                          <div class="review-media">
                            <img src="images/review/thum1.jpg" alt="" />
                          </div>
                          <h5 class="title">The best photographer!!!</h5>
                          <p>
                            The best photographer any bride ( especially one who
                            does not like her photo being taken!) could ask for!
                            Can not thank you enough Chanon.
                          </p>
                        </div>
                      </div>
                      <div class="venues-reviews">
                        <div class="reviews-info">
                          <div class="reviews-user">
                            <h6 class="reviewer-name">Fran & Josh</h6>
                            <h6 class="wedding-date">
                              Married in November 2018
                            </h6>
                          </div>
                          <div class="reviews-rating">
                            <ul class="rating">
                              <li><i class="fa fa-star"></i></li>
                              <li><i class="fa fa-star"></i></li>
                              <li><i class="fa fa-star"></i></li>
                              <li><i class="fa fa-star"></i></li>
                              <li><i class="fa fa-star"></i></li>
                            </ul>
                            <h6 class="review-date">January 2019</h6>
                          </div>
                        </div>
                        <div class="reviews-content">
                          <h5 class="title">The best photographer!!!</h5>
                          <p>
                            The best photographer any bride ( especially one who
                            does not like her photo being taken!) could ask for!
                            Can not thank you enough Chanon.
                          </p>
                        </div>
                      </div>
                      <!-- Pagination -->
                      <div class="pagination-bx m-b30">
                        <ul class="pagination">
                          <li class="previous">
                            <a href="javascript:void(0);"
                              ><i class="ti-arrow-left"></i
                            ></a>
                          </li>
                          <li class="active"><a href="#">1</a></li>
                          <li><a href="javascript:void(0);">2</a></li>
                          <li><a href="javascript:void(0);">3</a></li>
                          <li class="next">
                            <a href="javascript:void(0);"
                              ><i class="ti-arrow-right"></i
                            ></a>
                          </li>
                        </ul>
                      </div>
                      <!-- Pagination END -->
                      <div class="card-bx yellow afnone bordered m-b30">
                        <div class="inner">
                          <span class="tag-btn pull-right"
                            >Our Autumn Open Evening</span
                          >
                          <h6 class="title">Wedding Manager Couple Discount</h6>
                          <p>
                            Always an enjoyable event! The Barn will be set up
                            for a wedding - come and enjoy wandering around the
                            Barn and our beautiful gardens with a glass of fizz
                            in hand! 6pm-9pm.
                          </p>
                        </div>
                      </div>
                      <div class="text-center m-b30">
                        <a
                          href="javascript:;"
                          data-toggle="modal"
                          data-target="#contactSupplier"
                          class="btn"
                        >
                          <i class="fa fa-envelope-o"></i>
                          <span>Book your place</span>
                        </a>
                      </div>
                    </div>
                    <!-- Reviews End -->
                    <!-- Location -->
                    <h5
                      class="details-title"
                      data-toggle="collapse"
                      data-target="#map"
                      aria-expanded="false"
                      aria-controls="map"
                    >
                      Location & Contact Details
                    </h5>
                    <div class="collapse" id="map">
                      <div class="card card-body m-b30">
                        <iframe
                          src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d227748.3825624477!2d75.65046970649679!3d26.88544791796718!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x396c4adf4c57e281%3A0xce1c63a0cf22e09!2sJaipur%2C+Rajasthan!5e0!3m2!1sen!2sin!4v1500819483219"
                          class="align-self-stretch"
                          style="border: 0; width: 100%; min-height: 350px"
                          allowfullscreen
                        ></iframe>
                      </div>
                    </div>
                    <div class="location-details">
                      <ul class="info-bx">
                        <li>
                          <a href=""><i class="la la-laptop"></i>Website</a>
                        </li>
                        <li>
                          <a href=""><i class="la la-envelope"></i>Email</a>
                        </li>
                        <li>
                          <a href=""><i class="la la-phone"></i>01787374544</a>
                        </li>
                      </ul>
                      <div class="row">
                        <div class="col-lg-6 m-b20">
                          <h5 class="title">Address</h5>
                          <p>
                            Smeetham Hall Lane, Sudbury, Essex, CO10 7EU,
                            England
                          </p>
                        </div>
                        <div class="col-lg-6 m-b20">
                          <h5 class="title">Travel Notes</h5>
                          <p>
                            Please go to the map on our website:
                            info@example.com
                          </p>
                        </div>
                        <div class="col-lg-6 m-b20">
                          <h5 class="title">Nearest Motorway & Junction</h5>
                          <p>M11/A12/A120</p>
                        </div>
                        <div class="col-lg-6 m-b20">
                          <h5 class="title">Nearest Train Station</h5>
                          <p>Sudbury</p>
                        </div>
                        <div class="col-lg-6 m-b20">
                          <h5 class="title">Nearest Town`</h5>
                          <p>Sudbury</p>
                        </div>
                        <div class="col-lg-6 m-b20">
                          <h5 class="title">Nearest Airport</h5>
                          <p>Stansted</p>
                        </div>
                      </div>
                      <div class="follow-supplier">
                        <h5 class="title m-b20">Follow This Supplier On</h5>
                        <ul class="list-inline">
                          <li>
                            <a
                              href="javascript:void(0);"
                              class="btn outline-2 outline facebook circle"
                              ><i class="fa fa-facebook"></i
                            ></a>
                          </li>
                          <li>
                            <a
                              href="javascript:void(0);"
                              class="btn outline-2 outline google-plus circle"
                              ><i class="fa fa-google-plus"></i
                            ></a>
                          </li>
                          <li>
                            <a
                              href="javascript:void(0);"
                              class="btn outline-2 outline linkedin circle"
                              ><i class="fa fa-linkedin"></i
                            ></a>
                          </li>
                          <li>
                            <a
                              href="javascript:void(0);"
                              class="btn outline-2 outline instagram circle"
                              ><i class="fa fa-instagram"></i
                            ></a>
                          </li>
                        </ul>
                      </div>
                      <div class="text-center m-b30">
                        <a
                          href="javascript:;"
                          data-toggle="modal"
                          data-target="#contactSupplier"
                          class="btn"
                        >
                          <i class="fa fa-envelope-o"></i>
                          <span>Contact venue</span>
                        </a>
                      </div>
                    </div>
                    <h5 class="details-title">Press & Awards(5)</h5>
                    <div class="pressawards">
                      <div class="row">
                        <div class="col-lg-6">
                          <div class="press-bx">
                            <h6 class="title">
                              <i class="fa fa-quote-left"></i> Press & Awards
                              <span>(1)</span>
                            </h6>
                            <p>Don't Tell the Bride</p>
                            <a href="#"
                              >Wedding Venue of the Year 2018 - Countryside,
                              East of England</a
                            >
                            <a href="#"
                              >Wedding Venue of the Year - Something Different -
                              Essex Wedding Awards 2017/2018</a
                            >
                          </div>
                        </div>
                        <div class="col-lg-6">
                          <div class="press-bx">
                            <h6 class="title">
                              <i class="fa fa-trophy"></i> Industry Awards
                              <span>(4)</span>
                            </h6>
                            <p>Don't Tell the Bride</p>
                            <a href="#"
                              >Wedding Venue of the Year 2018 - Countryside,
                              East of England</a
                            >
                            <a href="#"
                              >Wedding Venue of the Year - Something Different -
                              Essex Wedding Awards 2017/2018</a
                            >
                          </div>
                        </div>
                        <div class="col-lg-6">
                          <div class="press-bx">
                            <h6 class="title">
                              <i class="fa fa-quote-left"></i> Press & Awards
                              <span>(1)</span>
                            </h6>
                            <p>Don't Tell the Bride</p>
                            <a href="#"
                              >Wedding Venue of the Year 2018 - Countryside,
                              East of England</a
                            >
                            <a href="#"
                              >Wedding Venue of the Year - Something Different -
                              Essex Wedding Awards 2017/2018</a
                            >
                          </div>
                        </div>
                        <div class="col-lg-6">
                          <div class="press-bx">
                            <h6 class="title">
                              <i class="fa fa-trophy"></i> Industry Awards
                              <span>(4)</span>
                            </h6>
                            <p>Don't Tell the Bride</p>
                            <a href="#"
                              >Wedding Venue of the Year 2018 - Countryside,
                              East of England</a
                            >
                            <a href="#"
                              >Wedding Venue of the Year - Something Different -
                              Essex Wedding Awards 2017/2018</a
                            >
                          </div>
                        </div>
                      </div>
                    </div>

                    <!-- Location END -->
                    <div
                      class="accordion form-accordion details-accordion"
                      id="accordionExample"
                    >
                      <div class="card">
                        <div class="card-header" id="headingOne">
                          <a
                            class="collapsed"
                            href="javascript:;"
                            data-toggle="collapse"
                            data-target="#collapseOne"
                            aria-expanded="false"
                            aria-controls="collapseOne"
                          >
                            Photo (56)
                          </a>
                        </div>
                        <div
                          id="collapseOne"
                          class="collapse"
                          aria-labelledby="headingOne"
                          data-parent="#accordionExample"
                          style=""
                        >
                          <div class="card-body">
                            <div
                              class="widget widget_gallery mb-0 gallery-grid-8 lightgallery"
                            >
                              <ul>
                                <li class="img-effect2">
                                  <span
                                    data-exthumbimage="images/gallery/pic1.jpg"
                                    data-src="images/gallery/pic1.jpg"
                                    class="check-km"
                                    title="Title Come Here"
                                  >
                                    <a href="javascript:void(0);"
                                      ><img
                                        src="images/gallery/pic1.jpg"
                                        alt=""
                                    /></a>
                                  </span>
                                </li>
                                <li class="img-effect2">
                                  <span
                                    data-exthumbimage="images/gallery/pic2.jpg"
                                    data-src="images/gallery/pic2.jpg"
                                    class="check-km"
                                    title="Title Come Here"
                                  >
                                    <a href="javascript:void(0);"
                                      ><img
                                        src="images/gallery/pic2.jpg"
                                        alt=""
                                    /></a>
                                  </span>
                                </li>
                                <li class="img-effect2">
                                  <span
                                    data-exthumbimage="images/gallery/pic3.jpg"
                                    data-src="images/gallery/pic3.jpg"
                                    class="check-km"
                                    title="Title Come Here"
                                  >
                                    <a href="javascript:void(0);"
                                      ><img
                                        src="images/gallery/pic3.jpg"
                                        alt=""
                                    /></a>
                                  </span>
                                </li>
                                <li class="img-effect2">
                                  <span
                                    data-exthumbimage="images/gallery/pic4.jpg"
                                    data-src="images/gallery/pic4.jpg"
                                    class="check-km"
                                    title="Title Come Here"
                                  >
                                    <a href="javascript:void(0);"
                                      ><img
                                        src="images/gallery/pic4.jpg"
                                        alt=""
                                    /></a>
                                  </span>
                                </li>
                                <li class="img-effect2">
                                  <span
                                    data-exthumbimage="images/gallery/pic5.jpg"
                                    data-src="images/gallery/pic5.jpg"
                                    class="check-km"
                                    title="Title Come Here"
                                  >
                                    <a href="javascript:void(0);"
                                      ><img
                                        src="images/gallery/pic5.jpg"
                                        alt=""
                                    /></a>
                                  </span>
                                </li>
                                <li class="img-effect2">
                                  <span
                                    data-exthumbimage="images/gallery/pic6.jpg"
                                    data-src="images/gallery/pic6.jpg"
                                    class="check-km"
                                    title="Title Come Here"
                                  >
                                    <a href="javascript:void(0);"
                                      ><img
                                        src="images/gallery/pic6.jpg"
                                        alt=""
                                    /></a>
                                  </span>
                                </li>
                                <li class="img-effect2">
                                  <span
                                    data-exthumbimage="images/gallery/pic7.jpg"
                                    data-src="images/gallery/pic7.jpg"
                                    class="check-km"
                                    title="Title Come Here"
                                  >
                                    <a href="javascript:void(0);"
                                      ><img
                                        src="images/gallery/pic7.jpg"
                                        alt=""
                                    /></a>
                                  </span>
                                </li>
                                <li class="img-effect2">
                                  <span
                                    data-exthumbimage="images/gallery/pic8.jpg"
                                    data-src="images/gallery/pic8.jpg"
                                    class="check-km"
                                    title="Title Come Here"
                                  >
                                    <a href="javascript:void(0);"
                                      ><img
                                        src="images/gallery/pic8.jpg"
                                        alt=""
                                    /></a>
                                  </span>
                                </li>
                                <li class="img-effect2">
                                  <span
                                    data-exthumbimage="images/gallery/pic9.jpg"
                                    data-src="images/gallery/pic9.jpg"
                                    class="check-km"
                                    title="Title Come Here"
                                  >
                                    <a href="javascript:void(0);"
                                      ><img
                                        src="images/gallery/pic9.jpg"
                                        alt=""
                                    /></a>
                                  </span>
                                </li>
                                <li class="img-effect2">
                                  <span
                                    data-exthumbimage="images/gallery/pic1.jpg"
                                    data-src="images/gallery/pic1.jpg"
                                    class="check-km"
                                    title="Title Come Here"
                                  >
                                    <a href="javascript:void(0);"
                                      ><img
                                        src="images/gallery/pic1.jpg"
                                        alt=""
                                    /></a>
                                  </span>
                                </li>
                                <li class="img-effect2">
                                  <span
                                    data-exthumbimage="images/gallery/pic2.jpg"
                                    data-src="images/gallery/pic2.jpg"
                                    class="check-km"
                                    title="Title Come Here"
                                  >
                                    <a href="javascript:void(0);"
                                      ><img
                                        src="images/gallery/pic2.jpg"
                                        alt=""
                                    /></a>
                                  </span>
                                </li>
                                <li class="img-effect2">
                                  <span
                                    data-exthumbimage="images/gallery/pic3.jpg"
                                    data-src="images/gallery/pic3.jpg"
                                    class="check-km"
                                    title="Title Come Here"
                                  >
                                    <a href="javascript:void(0);"
                                      ><img
                                        src="images/gallery/pic3.jpg"
                                        alt=""
                                    /></a>
                                  </span>
                                </li>
                                <li class="img-effect2">
                                  <span
                                    data-exthumbimage="images/gallery/pic4.jpg"
                                    data-src="images/gallery/pic4.jpg"
                                    class="check-km"
                                    title="Title Come Here"
                                  >
                                    <a href="javascript:void(0);"
                                      ><img
                                        src="images/gallery/pic4.jpg"
                                        alt=""
                                    /></a>
                                  </span>
                                </li>
                                <li class="img-effect2">
                                  <span
                                    data-exthumbimage="images/gallery/pic6.jpg"
                                    data-src="images/gallery/pic6.jpg"
                                    class="check-km"
                                    title="Title Come Here"
                                  >
                                    <a href="javascript:void(0);"
                                      ><img
                                        src="images/gallery/pic6.jpg"
                                        alt=""
                                    /></a>
                                  </span>
                                </li>
                                <li class="img-effect2">
                                  <span
                                    data-exthumbimage="images/gallery/pic7.jpg"
                                    data-src="images/gallery/pic7.jpg"
                                    class="check-km"
                                    title="Title Come Here"
                                  >
                                    <a href="javascript:void(0);"
                                      ><img
                                        src="images/gallery/pic7.jpg"
                                        alt=""
                                    /></a>
                                  </span>
                                </li>
                                <li class="img-effect2">
                                  <span
                                    data-exthumbimage="images/gallery/pic8.jpg"
                                    data-src="images/gallery/pic8.jpg"
                                    class="check-km"
                                    title="Title Come Here"
                                  >
                                    <a href="javascript:void(0);"
                                      ><img
                                        src="images/gallery/pic8.jpg"
                                        alt=""
                                    /></a>
                                  </span>
                                </li>
                              </ul>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="card">
                        <div class="card-header" id="headingThree">
                          <a
                            class="collapsed"
                            href="javascript:;"
                            data-toggle="collapse"
                            data-target="#collapseThree"
                            aria-expanded="false"
                            aria-controls="collapseThree"
                          >
                            Videos (2)
                          </a>
                        </div>
                        <div
                          id="collapseThree"
                          class="collapse"
                          aria-labelledby="headingThree"
                          data-parent="#accordionExample"
                        >
                          <div class="card-body">
                            <div
                              class="widget widget_gallery widget_video mb-0 gallery-grid-4"
                            >
                              <ul>
                                <li>
                                  <div class="video-frame">
                                    <img src="images/gallery/pic1.jpg" alt="" />
                                    <a
                                      href="https://www.youtube.com/watch?v=Dj6CKxQue7U"
                                      class="popup-youtube video"
                                      ><i class="fa fa-play"></i
                                    ></a>
                                  </div>
                                </li>
                                <li>
                                  <div class="video-frame">
                                    <img src="images/gallery/pic2.jpg" alt="" />
                                    <a
                                      href="https://www.youtube.com/watch?v=Dj6CKxQue7U"
                                      class="popup-youtube video"
                                      ><i class="fa fa-play"></i
                                    ></a>
                                  </div>
                                </li>
                                <li>
                                  <div class="video-frame">
                                    <img src="images/gallery/pic3.jpg" alt="" />
                                    <a
                                      href="https://www.youtube.com/watch?v=Dj6CKxQue7U"
                                      class="popup-youtube video"
                                      ><i class="fa fa-play"></i
                                    ></a>
                                  </div>
                                </li>
                                <li>
                                  <div class="video-frame">
                                    <img src="images/gallery/pic4.jpg" alt="" />
                                    <a
                                      href="https://www.youtube.com/watch?v=Dj6CKxQue7U"
                                      class="popup-youtube video"
                                      ><i class="fa fa-play"></i
                                    ></a>
                                  </div>
                                </li>
                                <li>
                                  <div class="video-frame">
                                    <img src="images/gallery/pic5.jpg" alt="" />
                                    <a
                                      href="https://www.youtube.com/watch?v=Dj6CKxQue7U"
                                      class="popup-youtube video"
                                      ><i class="fa fa-play"></i
                                    ></a>
                                  </div>
                                </li>
                                <li>
                                  <div class="video-frame">
                                    <img src="images/gallery/pic6.jpg" alt="" />
                                    <a
                                      href="https://www.youtube.com/watch?v=Dj6CKxQue7U"
                                      class="popup-youtube video"
                                      ><i class="fa fa-play"></i
                                    ></a>
                                  </div>
                                </li>
                                <li>
                                  <div class="video-frame">
                                    <img src="images/gallery/pic7.jpg" alt="" />
                                    <a
                                      href="https://www.youtube.com/watch?v=Dj6CKxQue7U"
                                      class="popup-youtube video"
                                      ><i class="fa fa-play"></i
                                    ></a>
                                  </div>
                                </li>
                                <li>
                                  <div class="video-frame">
                                    <img src="images/gallery/pic8.jpg" alt="" />
                                    <a
                                      href="https://www.youtube.com/watch?v=Dj6CKxQue7U"
                                      class="popup-youtube video"
                                      ><i class="fa fa-play"></i
                                    ></a>
                                  </div>
                                </li>
                              </ul>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                    <!-- Faq -->
                    <h5 class="details-title">Preferred Supplier List(23)</h5>
                    <div class="preferred-supplier">
                      <div
                        class="item4 owl-carousel owl-btn-center-lr owl-btn-1"
                      >
                        <div class="item">
                          <div class="listing-bx listing-sm">
                            <div class="listing-media">
                              <img src="images/listing/pic5.jpg" alt="" />
                            </div>
                            <div class="listing-info">
                              <h3 class="title">
                                <a href="listing-details.html"
                                  >Wedding Venue Title Name</a
                                >
                              </h3>
                              <p class="location">
                                <i class="fa fa-map-marker"></i> Ahmedabad,
                                Gujarat.
                              </p>
                            </div>
                          </div>
                        </div>
                        <div class="item">
                          <div class="listing-bx listing-sm">
                            <div class="listing-media">
                              <img src="images/listing/pic6.jpg" alt="" />
                            </div>
                            <div class="listing-info">
                              <h3 class="title">
                                <a href="listing-details.html"
                                  >Wedding Venue Title Name</a
                                >
                              </h3>
                              <p class="location">
                                <i class="fa fa-map-marker"></i> Ahmedabad,
                                Gujarat.
                              </p>
                            </div>
                          </div>
                        </div>
                        <div class="item">
                          <div class="listing-bx listing-sm">
                            <div class="listing-media">
                              <img src="images/listing/pic7.jpg" alt="" />
                            </div>
                            <div class="listing-info">
                              <h3 class="title">
                                <a href="listing-details.html"
                                  >Wedding Venue Title Name</a
                                >
                              </h3>
                              <p class="location">
                                <i class="fa fa-map-marker"></i> Ahmedabad,
                                Gujarat.
                              </p>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>

                    <h5 class="details-title">FAQ (10)</h5>
                    <div class="row">
                      <div class="col-lg-6">
                        <div class="faq-box">
                          <h5 class="title">
                            Describe the best wedding that happened at your
                            venue?
                          </h5>
                          <p>
                            It would be impossible to single out one wedding! We
                            work incredibly hard to ensure that every couple
                            feels like the first couple to be wed at the Priory
                            and that it is special and personal to them so they
                            are all different in their own way!
                          </p>
                        </div>
                      </div>
                      <div class="col-lg-6">
                        <div class="faq-box">
                          <h5 class="title">
                            What is your No. 1 wedding manager tip for couples?
                          </h5>
                          <p>
                            Get your venue and your date booked first. So many
                            other details will naturally fall into place once
                            this is decided that it will make it a lot easier to
                            make decisions.
                          </p>
                        </div>
                      </div>
                      <div class="col-lg-6">
                        <div class="faq-box">
                          <h5 class="title">
                            What’s your favourite personal touch you’ve seen at
                            a wedding?
                          </h5>
                          <p>
                            Our couples receive exclusive use of the entire
                            house and it is always lovely when they really take
                            over and make it their home for the day. Family
                            photos on the window sills and mantle piece and
                            guests wandering and relaxing at their leisure
                            throughout the day.
                          </p>
                        </div>
                      </div>
                      <div class="col-lg-6">
                        <div class="faq-box">
                          <h5 class="title">
                            Describe your venue in 5 adjectives.
                          </h5>
                          <p>
                            Breath taking, Rural, Exclusive, Comfortable,
                            Magical
                          </p>
                        </div>
                      </div>
                      <div class="col-lg-6">
                        <div class="faq-box">
                          <h5 class="title">
                            Where’s the best photo spot at your venue?
                          </h5>
                          <p>
                            The Tower is such a photographers favourite!
                            Adjacent to the main house and the inner courtyard,
                            you can capture stunning photos dawn, day, dusk and
                            night!
                          </p>
                        </div>
                      </div>
                      <div class="col-lg-6">
                        <div class="faq-box">
                          <h5 class="title">
                            Have you had any celebrity guest or wedding at your
                            venue?
                          </h5>
                          <p>
                            Many a time but sadly we have to keep the who and
                            the when to ourselves!
                          </p>
                        </div>
                      </div>
                      <div class="col-lg-6">
                        <div class="faq-box">
                          <h5 class="title">What’s your favourite canapé?</h5>
                          <p>
                            Our office team debate this regularly but as I'm the
                            one on the keyboard it has to be..... chocolate
                            dipped strawberries dressed like mini Brides and
                            Grooms!
                          </p>
                        </div>
                      </div>
                      <div class="col-lg-6">
                        <div class="faq-box">
                          <h5 class="title">
                            What’s your favourite midnight treat?
                          </h5>
                          <p>Bacon baps without a doubt.</p>
                        </div>
                      </div>
                      <div class="col-lg-6">
                        <div class="faq-box">
                          <h5 class="title">
                            What is your venue's most unique feature?
                          </h5>
                          <p>
                            Probably the fact that we allow our couples to
                            actually use the house all day and overnight. We
                            don't actually permit a marquee so couples and their
                            guests can enjoy their very own Tudor manor house
                            for a day.
                          </p>
                        </div>
                      </div>
                      <div class="col-lg-6">
                        <div class="faq-box">
                          <h5 class="title">
                            What part of your business are you most proud of?
                          </h5>
                          <p>
                            We are all about the weddings. We haven't deviated
                            into events or conferences, for 26 years we have
                            100% focused on making ourselves wedding experts.
                          </p>
                        </div>
                      </div>
                    </div>
                    <div class="alert alert-info alert-iconbx">
                      <i class="fa fa-star-o alert-icon"></i>
                      <h5 class="title">Wedding Manager Benefits</h5>
                      <p>Insure your ring before you show off the bling!</p>
                    </div>
                    <!-- Faq End -->
                    <div class="dlab-divider bg-gray-dark">
                      <i class="icon-dot c-square"></i>
                    </div>
                    <!-- Up Next Slide -->
                    <h5 class="details-title">Up Next</h5>
                    <div class="item4 owl-carousel owl-btn-center-lr owl-btn-1">
                      <div class="item">
                        <div class="listing-bx listing-sm">
                          <div class="listing-media">
                            <img src="images/listing/pic3.jpg" alt="" />
                            <div class="media-info">
                              <ul class="featured-star">
                                <li><i class="fa fa-star"></i></li>
                                <li><i class="fa fa-star"></i></li>
                                <li><i class="fa fa-star"></i></li>
                                <li><i class="fa fa-star"></i></li>
                                <li><i class="fa fa-star"></i></li>
                              </ul>
                              <a class="like-btn" href="javascript:void(0)"
                                ><i class="fa fa-heart-o"></i
                              ></a>
                            </div>
                          </div>
                          <div class="listing-info">
                            <h3 class="title">
                              <a href="listing-details.html"
                                >Wedding Venue Title Name</a
                              >
                            </h3>
                            <p class="location">
                              <i class="fa fa-map-marker"></i> Ahmedabad,
                              Gujarat.
                            </p>
                          </div>
                        </div>
                      </div>
                      <div class="item">
                        <div class="listing-bx listing-sm">
                          <div class="listing-media">
                            <img src="images/listing/pic3.jpg" alt="" />
                            <div class="media-info">
                              <ul class="featured-star">
                                <li><i class="fa fa-star"></i></li>
                                <li><i class="fa fa-star"></i></li>
                                <li><i class="fa fa-star"></i></li>
                                <li><i class="fa fa-star"></i></li>
                                <li><i class="fa fa-star"></i></li>
                              </ul>
                              <a class="like-btn" href="javascript:void(0)"
                                ><i class="fa fa-heart-o"></i
                              ></a>
                            </div>
                          </div>
                          <div class="listing-info">
                            <h3 class="title">
                              <a href="listing-details.html"
                                >Wedding Venue Title Name</a
                              >
                            </h3>
                            <p class="location">
                              <i class="fa fa-map-marker"></i> Ahmedabad,
                              Gujarat.
                            </p>
                          </div>
                        </div>
                      </div>
                      <div class="item">
                        <div class="listing-bx listing-sm">
                          <div class="listing-media">
                            <img src="images/listing/pic3.jpg" alt="" />
                            <div class="media-info">
                              <ul class="featured-star">
                                <li><i class="fa fa-star"></i></li>
                                <li><i class="fa fa-star"></i></li>
                                <li><i class="fa fa-star"></i></li>
                                <li><i class="fa fa-star"></i></li>
                                <li><i class="fa fa-star"></i></li>
                              </ul>
                              <a class="like-btn" href="javascript:void(0)"
                                ><i class="fa fa-heart-o"></i
                              ></a>
                            </div>
                          </div>
                          <div class="listing-info">
                            <h3 class="title">
                              <a href="listing-details.html"
                                >Wedding Venue Title Name</a
                              >
                            </h3>
                            <p class="location">
                              <i class="fa fa-map-marker"></i> Ahmedabad,
                              Gujarat.
                            </p>
                          </div>
                        </div>
                      </div>
                      <div class="item">
                        <div class="listing-bx listing-sm">
                          <div class="listing-media">
                            <img src="images/listing/pic3.jpg" alt="" />
                            <div class="media-info">
                              <ul class="featured-star">
                                <li><i class="fa fa-star"></i></li>
                                <li><i class="fa fa-star"></i></li>
                                <li><i class="fa fa-star"></i></li>
                                <li><i class="fa fa-star"></i></li>
                                <li><i class="fa fa-star"></i></li>
                              </ul>
                              <a class="like-btn" href="javascript:void(0)"
                                ><i class="fa fa-heart-o"></i
                              ></a>
                            </div>
                          </div>
                          <div class="listing-info">
                            <h3 class="title">
                              <a href="listing-details.html"
                                >Wedding Venue Title Name</a
                              >
                            </h3>
                            <p class="location">
                              <i class="fa fa-map-marker"></i> Ahmedabad,
                              Gujarat.
                            </p>
                          </div>
                        </div>
                      </div>
                    </div>
                    <!-- Up Next Slide End -->
                  </div>
                  <!-- Left part END -->
                  <!-- Side bar start -->
                  <!-- <div class="col-xl-4 col-lg-5 col-md-12">
                        <aside class="side-bar listing-side-bar">
                          <div class="venues-sidebar-info">
                            <div class="title-head">
                              <h5 class="title">
                                Send a message to Calderfields Golf and Country
                                Club
                              </h5>
                            </div>
                            <small class="small-bx"
                              >We will pass your details to the supplier so they
                              can get back to you with a proposal.</small
                            >
                            <ul class="vender-profile-list">
                              <li>
                                <a
                                  data-toggle="modal"
                                  data-target="#edit-details"
                                  class="btn edit"
                                  href="javascript:;"
                                  >Edit <i class="fa fa-pencil"></i
                                ></a>
                              </li>
                              <li><strong>Email:</strong> example@gmail.com</li>
                              <li><strong>Phone:</strong> +91 123 456 7890</li>
                              <li>
                                <strong>Names:</strong> Deepak Gaur &amp;
                                deepika gaur
                              </li>
                              <li>
                                <strong>Ideal date:</strong
                                >{{
                                  subeventDetails.fromDate &&
                                    formatDate(subeventDetails.fromDate)
                                }}
                              </li>
                              <li>
                                <strong>Estimated guests:</strong>
                                {{ subeventDetails.estimatedGuests }}
                              </li>
                            </ul>
                            <div class="text-message">
                              <form>
                                <textarea class="form-control">
Hi,
											We're interested in your services! Please could you share your availability around our date, plus any additional information?
											Thank you!
										</textarea
                                >
                              </form>
                              <a href="#" class="btn btn-block gradient green"
                                >Request brochure</a
                              >
                            </div>
                          </div>
                        </aside>
                        <aside class="side-bar listing-side-bar sticky-top">
                          <ul class="vender-details-form">
                            <li class="btn-group-toggle" data-toggle="buttons">
                              <label class="btn booked-btn">
                                <i class="icon1 fa fa-thumbs-up"></i>
                                <i class="icon2 fa fa-thumbs-o-up"></i>
                                <input
                                  type="checkbox"
                                  name="options"
                                  id="option1"
                                  checked=""
                                />
                                <span class="show1">Mark as booked</span>
                                <span class="show2">Booked</span>
                              </label>
                            </li>
                            <li class="btn-group-toggle" data-toggle="buttons">
                              <label class="btn shortlist-btn">
                                <i class="icon1 fa fa-heart"></i>
                                <i class="icon2 fa fa-heart-o"></i>
                                <input
                                  type="checkbox"
                                  name="options"
                                  id="option2"
                                />
                                <span class="show1">Shortlisted</span>
                                <span class="show2">Add to shortlist</span>
                              </label>
                            </li>
                            <li>
                              <a
                                href="javascript:;"
                                data-toggle="modal"
                                data-target="#writeReviews"
                                class="btn reviews-btn"
                              >
                                <i class="fa fa-star-o"></i>
                                <span>Write a Reviews</span>
                              </a>
                            </li>
                            <li>
                              <a
                                href="javascript:;"
                                data-toggle="modal"
                                data-target="#exampleModal2"
                                class="btn quote-btn"
                              >
                                <i class="fa fa-eur"></i>
                                <span>Request a quote</span>
                              </a>
                            </li>
                            <li>
                              <a
                                href="javascript:;"
                                data-toggle="modal"
                                data-target="#contactSupplier"
                                class="btn"
                              >
                                <i class="fa fa-envelope-o"></i>
                                <span>Contact supplier</span>
                              </a>
                            </li>
                            <li>
                              <a
                                href="javascript:;"
                                data-toggle="modal"
                                data-target="#exampleModal2"
                                class="btn showround-btn"
                              >
                                <i class="fa fa-gift"></i>
                                <span>Request showround</span>
                              </a>
                            </li>
                          </ul>
                        </aside>
                      </div> -->
                  <!-- Side bar END -->
                </div>
              </div>
              <!-- <div class="enquiries-details">
                  <div class="enquiries-box m-b30 ">
                    <h5 class="title">Details</h5>
                    <ul class="enquiries-details-list">
                      <li>
                        {{ subeventDetails.title }}
                      </li>
                      <li>
                        Budget<span
                          >&#36;{{
                            subeventDetails.budget &&
                              addCommas(String(subeventDetails.budget))
                          }}</span
                        >
                      </li>
                      <li>
                        Estimated Guests:<span>{{
                          subeventDetails.estimatedGuests &&
                            addCommas(String(subeventDetails.estimatedGuests))
                        }}</span>
                      </li>
                      <li>
                        Date:<span>{{
                          subeventDetails.fromDate &&
                            formatDate(subeventDetails.fromDate)
                        }}</span>
                      </li>
                      <li>
                        Location:<span>{{
                          subeventDetails.location &&
                            subeventDetails.location.address +
                              ", " +
                              subeventDetails.location.city +
                              ", " +
                              subeventDetails.location.state +
                              ", " +
                              subeventDetails.location.country +
                              ", " +
                              subeventDetails.location.postalCode
                        }}</span>
                      </li>
                    </ul>
                  </div>
                </div> -->
            </div>
            <div class="col-lg-3 col-md-4 m-b30">
              <div class="pages-bx">
                <ul class="side-page-bx">
                  <li class="active"><a>Details</a></li>

                  <li><a href="#" @click="editSubevent">Edit Event</a></li>

                  <li>
                    <a href="#" @click="openGuestListPage">Guest List</a>
                  </li>
                  <li><a href="privacy-policy.html">Budget</a></li>
                  <li><a href="#" @click="addSubevent">Add Event</a></li>
                  <!-- <li><a href="terms.html">Terms</a></li>
                    <li>
                      <a href="wedding-planning-tools.html"
                        >Wedding Manager Tools</a
                      >
                    </li>
                    <li>
                      <a href="wedding-gift-lists.html">Wedding Gift Lists</a>
                    </li> -->
                </ul>
              </div>
            </div>
          </div>
        </div>
        <!-- Manager Tools End -->
        <!-- subevent list area -->
        <!-- <div class="section-full content-inner bg-gray">
          <div class="container">
            <div class="row">
              <div class="col-xl-12 col-lg-12 col-md-12">
                <div class="planner-box m-b30">
                  <div class="content-box">
                    <div class="planner-budget-bx">
                      <div class="planner-category">
                        <h3 class="category-title">Choose Sub Events</h3>
                      </div>
                      <div class="row">
                        <div class="col-md-6"></div>
                      </div>
                      <ul id="budget-panel">
                        <li v-if="noData">
                          <div class="budget-bx"><h4>No Data</h4></div>
                        </li>
                        <li
                          v-for="subevent in subeventData"
                          v-bind:key="subevent.eventId"
                          :id="'subevent_panel' + subevent.eventId"
                        >
                          <div class="budget-bx">
                            <div class="event">
                              <h4 class="content">
                                {{
                                  subevent.fromDate &&
                                    formatDate(subevent.fromDate)
                                }}
                              </h4>
                            </div>
                            <div class="event">
                              <h4 class="content">{{ subevent.title }}</h4>
                            </div>
                            <div class="event">
                              <h4 class="content">
                                {{
                                  subevent.budget &&
                                    "Budget- " + addCommas(subevent.budget)
                                }}
                              </h4>
                            </div>

                            <div
                              class="edit-icon row"
                              style="align-items: center;"
                            >
                              <div
                                class="col-3"
                                style="padding-left: 0; margin-left: -10px;"
                              >
                                <a class="btn-link">
                                  <button
                                    @click="editSubevent(subevent)"
                                    class="btn gray toggle_button"
                                  >
                                    Edit
                                  </button>
                                  <i
                                    class="fa fa-pencil toggle_icon"
                                    aria-hidden="true"
                                  ></i>
                                </a>
                              </div>
                              <div class="col-2">
                                
                                <i class="fa fa-trash" aria-hidden="true"></i>
                              </div>
                            </div>
                          </div>

                          <div class="budget-bx">
                            <div class="event">
                              <h4 class="content">
                                {{
                                  subevent.estimatedGuests &&
                                    "Guests - " + subevent.estimatedGuests
                                }}
                              </h4>
                            </div>
                            <div class="event">
                              <h4 class="content">
                                {{
                                  subevent.shortDescription &&
                                    "Short Description - " +
                                      subevent.shortDescription
                                }}
                              </h4>
                            </div>
                          </div>
                        </li>
                        <li>
                          <div class="budget-bx">
                            <a
                              href="javascript:void(0);"
                              class="btn add-budget-list-item gradient"
                              >+ Add new Subevent</a
                            >
                          </div>
                        </li>
                      </ul>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div> -->
      </div>
      <!-- Footer -->
      <Footer />
      <!-- Footer End -->
    </div>
  </div>
"},null]}