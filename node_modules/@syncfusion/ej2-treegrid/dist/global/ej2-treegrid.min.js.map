{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/actions/crud-actions.js","../../src/treegrid/actions/batch-edit.js","../../src/treegrid/models/column.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/models/textwrap-settings.js","../../src/treegrid/base/constant.js","../../src/treegrid/actions/selection.js","../../src/treegrid/actions/print.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/actions/rowdragdrop.js","../../src/treegrid/models/rowdrop-settings.js","../../src/treegrid/renderer/virtual-row-model-generator.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/sort.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js","../../src/treegrid/actions/detail-row.js","../../src/treegrid/renderer/virtual-tree-content-render.js","../../src/treegrid/actions/virtual-scroll.js","../../src/treegrid/actions/freeze-column.js","../../src/global.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = Object.keys(modifiedData[k].taskData);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    editedData.taskData[keys[j]] = treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            if (control.editSettings.mode === 'Batch') {\n                treeData.splice(treeData.length, 0, value);\n            }\n            else {\n                treeData.unshift(value);\n            }\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex]);\n                value = getPlainData(value);\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        record = currentRecords[index_1];\n        record.hasChildRecords = false;\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (!record.hasOwnProperty('childRecords')) {\n                record.childRecords = [];\n            }\n            else {\n                if (!isNullOrUndefined(child)) {\n                    record.childRecords.push(child);\n                }\n            }\n            if (record.childRecords.indexOf(childRecords) === -1) {\n                record.childRecords.unshift(childRecords);\n            }\n            if (isSelfReference) {\n                if (!record.hasOwnProperty(control.childMapping)) {\n                    record[control.childMapping] = [];\n                }\n                if (record[control.childMapping].indexOf(childRecords) === -1) {\n                    record[control.childMapping].unshift(childRecords);\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        control.renderModule.cellRender({\n            data: record, cell: row.cells[control.treeColumnIndex] ? row.cells[control.treeColumnIndex]\n                : movableRow.cells[control.treeColumnIndex - control.frozenColumns],\n            column: control.grid.getColumns()[control.treeColumnIndex],\n            requestType: action\n        });\n    }\n}\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nexport function batchSaveAction(control) {\n    var i;\n    var batchChanges = control.getBatchChanges();\n    var addedRecords = 'addedRecords';\n    if (batchChanges[addedRecords].length) {\n        for (i = 0; i < batchChanges[addedRecords].length; i++) {\n            control.notify(events.crudAction, { value: batchChanges[addedRecords][i], action: 'batchsave' });\n        }\n    }\n}\nexport function beforeBatchSaveAction(e, control) {\n    var changeRecords = 'changedRecords';\n    var changedRecords = e.batchChanges[changeRecords];\n    if (e.batchChanges[changeRecords].length) {\n        var selectedIndex = void 0;\n        var addRowIndex = void 0;\n        var columnName = void 0;\n        var isSelfReference = !isNullOrUndefined(control.parentIdMapping);\n        for (var i = 0; i < changedRecords.length; i++) {\n            editAction({ value: changedRecords[i], action: 'edit' }, control, isSelfReference, addRowIndex, selectedIndex, columnName);\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","import { isNullOrUndefined, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(+target.closest('tr').getAttribute('aria-rowindex'));\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        var adaptorName = 'adaptorName';\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                record : flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (flatRecord.hasOwnProperty(keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (childRecords[count].hasChildRecords) {\n                    this.traverSelection(childRecords[count], checkboxState, true);\n                }\n                else {\n                    this.updateSelectedItems(childRecords[count], checkboxState);\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var adaptorName = 'adaptorName';\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            var _loop_1 = function (i) {\n                var childRecord = this_1.parent.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === childRecords[i].uniqueID;\n                });\n                var currentRecord = getParentData(this_1.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = (isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                    childRecord[0] : currentRecord;\n                if (checkBoxRecord.checkboxState === 'indeterminate') {\n                    indeter++;\n                }\n                else if (checkBoxRecord.checkboxState === 'check') {\n                    checkChildRecords++;\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < childRecords.length; i++) {\n                _loop_1(i);\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var adaptorName = 'adaptorName';\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        data = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var adaptorName = 'adaptorName';\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            record[0] : checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (this.parent.autoCheckHierarchy) {\n            if ((requestType === 'sorting' || requestType === 'paging')) {\n                childData = this.parent.getCurrentViewRecords();\n                childLength = childData.length;\n                this.selectedIndexes = [];\n                for (var i = 0; i < childLength; i++) {\n                    this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                }\n            }\n            else if (requestType === 'delete' || args.action === 'add') {\n                var updatedData = [];\n                if (requestType === 'delete') {\n                    updatedData = args.data;\n                }\n                else {\n                    updatedData.push(args.data);\n                }\n                for (var i = 0; i < updatedData.length; i++) {\n                    if (requestType === 'delete') {\n                        var index = this.parent.flatData.indexOf(updatedData[i]);\n                        var checkedIndex = this.selectedIndexes.indexOf(index);\n                        this.selectedIndexes.splice(checkedIndex, 1);\n                        this.updateSelectedItems(updatedData[i], 'uncheck');\n                    }\n                    if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                        this.updateParentSelection(updatedData[i].parentItem);\n                    }\n                }\n            }\n            else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                args.data.checkboxState = 'uncheck';\n            }\n            else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh') {\n                this.selectedItems = [];\n                this.selectedIndexes = [];\n                childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                    this.parent.getCurrentViewRecords() : this.parent.flatData;\n                for (var i = 0; i < childData.length; i++) {\n                    if (childData[i].hasChildRecords) {\n                        this.updateParentSelection(childData[i]);\n                    }\n                    else {\n                        this.updateSelectedItems(childData[i], childData[i].checkboxState);\n                    }\n                }\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByField(args.column.field);\n        var summaryRow = data.isSummaryRow;\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex\n            && (args.requestType === 'add' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentItem) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        if (this.parent.frozenColumns > this.parent.treeColumnIndex &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns + 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            for (var i = 0; i < len; len = args.cell.children.length) {\n                cellElement.appendChild(args.cell.children[i]);\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    if (this.parent.initialRender) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                var clientRender = 'isClientRender';\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.hierarchyData = [];\n            this.taskIds = [];\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n            if (this.isSelfReference) {\n                var selfData = [];\n                var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                    .group(this.parent.parentIdMapping));\n                for (var i = 0; i < mappingData.length; i++) {\n                    var groupData = mappingData[i];\n                    var index = this.taskIds.indexOf(groupData.key);\n                    if (!isNullOrUndefined(groupData.key)) {\n                        if (index > -1) {\n                            var childData = (groupData.items);\n                            this.hierarchyData[index][this.parent.childMapping] = childData;\n                            continue;\n                        }\n                    }\n                    selfData.push.apply(selfData, groupData.items);\n                }\n                this.hierarchyData = this.selfReferenceUpdate(selfData);\n            }\n            if (!Object.keys(this.hierarchyData).length) {\n                this.parent.flatData = (!(this.parent.dataSource instanceof DataManager) ? this.parent.dataSource : []);\n            }\n            else {\n                this.createRecords(this.hierarchyData);\n            }\n            this.storedIndex = -1;\n        }\n        // else if (data instanceof DataManager && this.parent.isLocalData) {\n        //   this.convertToFlatData(data.dataSource.json);\n        // }\n        //this.crudActions();\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)\n                        && (isNullOrUndefined(records[rec].index))) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        records[rec].hasChildRecords = true;\n                    }\n                }\n            }\n            else {\n                this.convertToFlatData(records);\n            }\n        }\n        args.result = (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])\n            || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails) {\n        var _this = this;\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        var adaptorName = 'adaptorName';\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var clientRender = 'isClientRender';\n        if (rowDetails.rows.length > 0) {\n            rowDetails.record.expanded = true;\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                if (isBlazor() && this.parent.isServerRendered) {\n                    removeClass([rowDetails.rows[i]], 'e-treerowcollapsed');\n                    addClass([rowDetails.rows[i]], 'e-treerowexpanded');\n                }\n                else {\n                    rowDetails.rows[i].style.display = 'table-row';\n                }\n                if ((isBlazor() && (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]))\n                    || this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    if (!isNullOrUndefined(targetEle)) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow });\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            var dm = this.parent.dataSource;\n            var qry = this.parent.grid.getDataModule().generateQuery();\n            var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n            qry.queries = clonequries;\n            qry.isCountRequired = true;\n            qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n            showSpinner(this.parent.element);\n            dm.executeQuery(qry).then(function (e) {\n                var datas = _this.parent.grid.currentViewData;\n                var inx = datas.indexOf(rowDetails.record);\n                var haveChild = getObject('actual.nextLevel', e);\n                var result = e.result;\n                rowDetails.record.childRecords = result;\n                for (var r = 0; r < result.length; r++) {\n                    result[r].taskData = extend({}, result[r]);\n                    result[r].level = rowDetails.record.level + 1;\n                    result[r].index = Math.ceil(Math.random() * 1000);\n                    var parentData = extend({}, rowDetails.record);\n                    delete parentData.childRecords;\n                    result[r].parentItem = parentData;\n                    result[r].parentUniqueID = rowDetails.record.uniqueID;\n                    result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                    setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                    // delete result[r].parentItem.childRecords;\n                    if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[r])) {\n                        result[r].hasChildRecords = true;\n                        result[r].expanded = false;\n                    }\n                    datas.splice(inx + r + 1, 0, result[r]);\n                }\n                setValue('result', datas, e);\n                setValue('action', 'beforecontentrender', e);\n                _this.parent.trigger(events.actionComplete, e);\n                hideSpinner(_this.parent.element);\n                if (_this.parent.grid.aggregates.length > 0) {\n                    var gridQuery = getObject('query', e);\n                    var result_1 = 'result';\n                    if (isNullOrUndefined(gridQuery)) {\n                        gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                    }\n                    if (!isNullOrUndefined(gridQuery)) {\n                        var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                        e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                    }\n                }\n                e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e);\n                _this.parent.trigger(events.expanded, args);\n            });\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!currentData.hasOwnProperty('level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (action === 'add' || (requestType === 'batchsave' && (this.parent.editSettings.mode === 'Batch'\n                && this.batchChanges[this.addedRecords].length))) {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && !this.isRemote() ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { gridObserver } from '@syncfusion/ej2-grids';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        var clientRender = 'isClientRender';\n        if (this[clientRender]) {\n            this.isServerRendered = false;\n        }\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            this.loadGrid();\n            if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n                this.grid.rowDropSettings.targetID += '_gridcontrol';\n            }\n            this.addListener();\n            var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n            addClass([this.element], 'e-treegrid');\n            if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                this.element.style.height = this.height;\n            }\n            if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                this.element.style.width = this.width;\n            }\n            this.element.appendChild(gridContainer);\n            this.grid.appendTo(gridContainer);\n            this.wireEvents();\n        }\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        this.grid[destroyTemplate] = function (args) {\n            destroyTemplateFn.apply(_this.grid);\n            _this.clearTemplate(args);\n        };\n        if (isBlazor() && this.isServerRendered) {\n            var fn_1 = function (args) { return _this.gridRendered(args, fn_1); };\n            gridObserver.on('component-rendered', this.gridRendered, this);\n        }\n    };\n    TreeGrid.prototype.gridRendered = function (args, fn) {\n        if (args.id === this.element.id + '_gridcontrol') {\n            this.grid = args.grid;\n        }\n        else {\n            return;\n        }\n        this.grid.query.queries = [];\n        var isJsComponent = 'isJsComponent';\n        if (!this.isServerRendered) {\n            this.grid[isJsComponent] = true;\n        }\n        this.setBlazorGUID();\n        this.bindGridEvents();\n        var headerCheckbox = 'headerCheckbox';\n        this.grid.on('colgroup-refresh', this.selectionModule[headerCheckbox], this.selectionModule);\n        for (var i = 0; i < this.columns.length; i++) {\n            this.columns[i].uid = this.grid.columns[i].uid;\n        }\n        this.wireEvents();\n        var processModel = 'processModel';\n        this.grid[processModel]();\n        gridObserver.off('component-rendered', this.gridRendered);\n    };\n    TreeGrid.prototype.setBlazorGUID = function () {\n        var guid = 'guid';\n        if (this.editSettings) {\n            this.grid.editSettings[guid] = this.editSettings[guid];\n            this.grid.editSettings.template = this.editSettings.template;\n        }\n        for (var i = 0; i < this.aggregates.length; i++) {\n            for (var j = 0; j < this.aggregates[i].columns.length; j++) {\n                this.grid.aggregates[i].columns[j][guid] = this.aggregates[i].columns[j][guid];\n            }\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.grid.columns[i][guid] = this.columns[i][guid];\n        }\n    };\n    ;\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = isCountRequired(this) ? getValue('result', data) : data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            if (!isBlazor()) {\n                _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            }\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            if (isBlazor() && !_this.isServerRendered) {\n                var data = 'data';\n                var rowIndex = 'rowIndex';\n                var row = 'row';\n                args[data] = args[data][args[data].length - 1];\n                args[rowIndex] = args[rowIndex][args[rowIndex].length - 1];\n                args[row] = args[row][args[row].length - 1];\n            }\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.cellEdit = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        var keypressed = 'key-pressed';\n        var editKeyPress = 'keyPressed';\n        var localobserver = 'localObserver';\n        if (this.editModule && isBlazor() && this.isServerRendered) {\n            this.grid.on(keypressed, this.editModule[editKeyPress], this.editModule);\n            var events_1 = this.grid[localobserver].boundedEvents['key-pressed'];\n            events_1.splice(0, 0, events_1.pop());\n        }\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor() && !_this.isServerRendered) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        // this.grid.cellSaved = (args: CellSaveArgs): void => {\n        //   this.trigger(events.cellSaved, args);\n        //   this.notify(events.cellSaved, args);\n        // };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        // this.grid.batchAdd = (args: BatchAddArgs): void => {\n        //   this.trigger(events.batchAdd, args);\n        //   this.notify(events.batchAdd, args);\n        // }\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        // this.grid.beforeBatchAdd = (args: BeforeBatchAddArgs): void => {\n        //   this.trigger(events.beforeBatchAdd, args);\n        //   this.notify(events.beforeBatchAdd, args);\n        // }\n        // this.grid.batchDelete = (args: BatchDeleteArgs): void => {\n        //   this.trigger(events.batchDelete, args);\n        //   this.notify(events.batchDelete, args);\n        // }\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor() && !this.isServerRendered) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        var actionComplete;\n        var name = 'name';\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.actionComplete) && this.grid.actionComplete[name] === 'bound triggerEJEvents') {\n                actionComplete = this.grid.actionComplete;\n            }\n        }\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'delete' && !_this.isServerRendered) {\n                    var data = 'data';\n                    actionArgs[data] = _this.getSelectedRecords();\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit' && !_this.isServerRendered) {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            var name = 'name';\n            if (isBlazor() && _this.isServerRendered) {\n                var rows = _this.getRows();\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[i].classList.contains('e-treerowcollapsed')) {\n                        removeClass([rows[i]], 'e-treerowcollapsed');\n                        addClass([rows[i]], 'e-treerowexpanded');\n                    }\n                    var cells = rows[i].querySelectorAll('.e-rowcell');\n                    var expandicon = cells[_this.treeColumnIndex].getElementsByClassName('e-treegridcollapse')[0];\n                    if (expandicon) {\n                        removeClass([expandicon], 'e-treegridcollapse');\n                        addClass([expandicon], 'e-treegridexpand');\n                    }\n                }\n                if (actionComplete && typeof actionComplete === 'function' && actionComplete[name] === 'bound triggerEJEvents') {\n                    actionComplete.apply(_this, [args]);\n                }\n            }\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var treeGrid = this;\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: 'AddRow', target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: 'Above', id: 'Above' }, { text: 'Below', id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            this.grid.dataSource = this.flatData;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        this.grid.destroy();\n        this.dataModule.destroy();\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        if (!(isBlazor() && this.isServerRendered) || getValue('isRendered', this.grid) && !this.initialRender) {\n            this.grid.dataBind();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.uid === uid) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.uid === uid) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        return this.grid.showColumns(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        return this.grid.hideColumns(keys, hideBy);\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        if (isBlazor() && this.isServerRendered) {\n            return this.grid.columns;\n        }\n        else {\n            this.updateColumnModel(this.grid.getColumns(isRefresh));\n            return this.columnModel;\n        }\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        this.columnModel = [];\n        var stackedHeader = false;\n        if (!isBlazor() || !this.isServerRendered) {\n            var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n            var gridColumn = void 0;\n            for (var i = 0; i < gridColumns.length; i++) {\n                gridColumn = {};\n                for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (!isBlazor() || prop !== 'edit') {\n                        gridColumn[prop] = gridColumns[i][prop];\n                    }\n                }\n                this.columnModel.push(new Column(gridColumn));\n            }\n            var merge = 'deepMerge';\n            this[merge] = ['columns']; // Workaround for blazor updateModel\n            if (this.grid.columns.length !== this.columnModel.length) {\n                stackedHeader = true;\n            }\n            if (!stackedHeader) {\n                this.setProperties({ columns: this.columnModel }, true);\n            }\n            this[merge] = undefined; // Workaround for blazor updateModel\n        }\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        if (!isBlazor() || !this.isServerRendered) {\n            this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n            this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n            this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n            this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n        }\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     * @return {Object}\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this)) && !isCountRequired(_this)) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                _this.trigger(events.collapsed, collapseArgs);\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record, isChild);\n            }\n            else {\n                if (!isCountRequired(this) || action === 'collapse') {\n                    this.localExpand(action, row, record, isChild);\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function (e) {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ?\n                    record[_this.childMapping].length > childData.length ? record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.refresh();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild(rows);\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record, isChild) {\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var index = childRecords[0].parentItem.index;\n        var rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (this.frozenRows > 0) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = displayAction;\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rows) {\n        var rData;\n        for (var i = 0; i < rows.length; i++) {\n            if (this.rowTemplate) {\n                rData = this.grid.getCurrentViewRecords()[rows[i].rowIndex];\n            }\n            else {\n                rData = this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            }\n            rData.expanded = false;\n            if (isBlazor() && this.isServerRendered) {\n                removeClass([rows[i]], 'e-treerowexpanded');\n                addClass([rows[i]], 'e-treerowcollapsed');\n            }\n            else {\n                rows[i].style.display = 'none';\n            }\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                removeClass([expandElement], 'e-treegridexpand');\n                addClass([expandElement], 'e-treegridcollapse');\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                this.collapseRemoteChild(cRow);\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0);\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[i].columns) {\n                cnt = this.getFrozenCount(cols[i].columns, cnt);\n            }\n            else {\n                if (cols[i].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            this.dropRows(args, isByMethod);\n            //this.refreshGridDataSource();\n            this.parent.refresh();\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        parentRecord.childRecords.splice(index, 1);\n                        if (!parentRecord.childRecords.length) {\n                            parentRecord.hasChildRecords = false;\n                            parentRecord.hasFilteredChildRecords = false;\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (!this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n                tObj.setProperties({ dataSource: tObj.dataSource }, false);\n            }\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (tObj.allowTextWrap) {\n            rowTop = row[0].offsetHeight;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            if (!isNullOrUndefined(spanContent.children) && spanContent.children.length >= 1\n                && spanContent.children[0].classList.contains('e-treecolumn-container')) {\n                spanContent.children[0].style.display = 'inline-block';\n                spanContent.children[0].style.verticalAlign = 'middle';\n                ele.style.display = 'inline-block';\n            }\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    this.dropRows(args);\n                    tObj.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)) {\n            var srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            tObj.refresh();\n            srcControl.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n                        draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n                        draggedRecord.level = this.treeGridData[recordIndex1].level;\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords)) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n            // if (tObj.isLocalData) {\n            //     tObj.parentData.push(droppedRecord);\n            // }\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                        break;\n                    }\n                }\n                if (idx !== -1 || idz !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_1 = 0; i_1 < treeGridData.length; i_1++) {\n                if (treeGridData[i_1][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_1;\n                }\n            }\n            if (idx !== -1) {\n                this.treeData.splice(idx, 1);\n                this.treeGridData.splice(idx, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n            notifyArgs.requestType = 'refresh';\n        }\n        var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n        for (var r = 0; r < rows.length; r++) {\n            rows[r].index = (this.visualData).indexOf(rows[r].data);\n        }\n        return rows;\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'virtualscroll', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if (clear) {\n            this.cache = {};\n            this.data = {};\n            this.groups = {};\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && uniqueIDValue.hasOwnProperty(parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    ;\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent)) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level >\n                tObj.getCurrentViewRecords()[args.rowIndex - 1].level) {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n            }\n            else {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level ===\n                tObj.getCurrentViewRecords()[args.rowIndex - 1].level) {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level === 0) {\n                this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level !== 0) {\n                this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n            }\n        }\n        if (args.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            if (childRecordsLength) {\n                var _loop_1 = function (summaryRowIndex, len_1) {\n                    var item = void 0;\n                    item = {};\n                    for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                        var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                            this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                        item[field] = null;\n                    }\n                    if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        var idx_1;\n                        flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                            idx_1 = i;\n                            return;\n                        } });\n                        var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                        var summaryParent = extend({}, parentRecord);\n                        delete summaryParent.childRecords;\n                        delete summaryParent[this_1.parent.childMapping];\n                        setValue('parentItem', summaryParent, item);\n                        var level = getObject('level', summaryParent);\n                        setValue('level', level + 1, item);\n                        var index = getObject('index', summaryParent);\n                        setValue('isSummaryRow', true, item);\n                        setValue('parentUniqueID', summaryParent.uniqueID, item);\n                        if (isSort) {\n                            var childRecords = getObject('childRecords', parentRecord);\n                            if (childRecords.length) {\n                                childRecords.push(item);\n                            }\n                        }\n                        flatRecords.splice(currentIndex, 0, item);\n                    }\n                    else {\n                        return \"continue\";\n                    }\n                };\n                var this_1 = this;\n                for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                    _loop_1(summaryRowIndex, len_1);\n                }\n                this.flatChildRecords = [];\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        var editRecord = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { beforeBatchSaveAction, batchSaveAction } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        // this.batchDeleted = {};\n        // this.batchRecords = [];\n        // this.isAdd = false;\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        // this.parent.on(events.cellSaved, this.cellSaved, this);\n        // this.parent.on(events.batchDelete, this.batchDelete, this);\n        // this.parent.on(events.batchAdd, this.batchAdd, this);\n        // this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        //this.parent.grid.on(events.batchEditFormRendered, this.batchEditFormRendered, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        this.parent.trigger(events.actionComplete, args);\n    };\n    /*private batchEditFormRendered(args: Object):void {\n      this.parent.trigger(events.actionComplete, args);\n    }*/\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.cellSave, this.cellSave);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        //this.parent.grid.off('click', this.gridSingleClick);\n        //this.parent.grid.off(events.batchEditFormRendered, this.batchEditFormRendered);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && this.parent.editSettings.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch || (this.parent.editSettings.mode === 'Cell' && isBlazor() && this.parent.isServerRendered)) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var selectRowIndex = cellDetails.rowIndex;\n            var treeColumnIndexValue = void 0;\n            if (this.parent.allowRowDragAndDrop) {\n                treeColumnIndexValue = this.parent.treeColumnIndex + 1;\n            }\n            else {\n                treeColumnIndexValue = this.parent.treeColumnIndex;\n            }\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: this.parent.getRows()[selectRowIndex].cells[treeColumnIndexValue],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            var targetElement = 'targetElement';\n            if (!isNullOrUndefined(this.parent[targetElement])) {\n                var row = this.parent[targetElement].closest('tr');\n                this.parent.collapseRow(row);\n                this.parent[targetElement] = null;\n            }\n        }\n        // this.batchRecords = [];\n        // let keys: string[] = Object.keys(this.batchDeleted);\n        // let primaryLey: string = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        // let currentViewRecords: ITreeData[] = this.parent.grid.getCurrentViewRecords();\n        // for (let i: number = 0; i < keys.length; i++) {\n        //   let index: number;\n        //   currentViewRecords.map((e: ITreeData, j: number) => {\n        //     if (this.batchDeleted.hasOwnProperty(keys[i]) && e[primaryLey] === this.batchDeleted[keys[i]][primaryLey]) {\n        //       index = j; return;\n        //     }\n        //   });\n        //   this.parent.renderModule.cellRender({\n        //     data: currentViewRecords[index],\n        //     cell: (<HTMLTableRowElement>this.parent.getRowByIndex(index)).cells[this.parent.treeColumnIndex],\n        //     column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n        //   });\n        // }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row = void 0;\n            if (isNullOrUndefined(args.cell)) {\n                row = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = this.parent.getDataRows().indexOf(row);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[row.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                this.updateCell(args, rowIndex_1);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n                var saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[this.parent.treeColumnIndex];\n            for (var l = 0; l < treecell.classList.length; l++) {\n                var value = treecell.classList[l];\n                var remove = /e-gridrowindex/i;\n                var removed = /e-griddetailrowindex/i;\n                var result = value.match(remove);\n                var results = value.match(removed);\n                if (result != null) {\n                    removeClass([treecell], value);\n                }\n                if (results != null) {\n                    removeClass([treecell], value);\n                }\n            }\n            if (!rows[k].classList.contains('e-detailrow')) {\n                addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n            }\n            else {\n                addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        var rows = this.parent.grid.getDataRows();\n        var movableRows;\n        if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n            movableRows = this.parent.getMovableDataRows();\n        }\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                // let records: Object[] = this.batchRecords.length ? this.batchRecords : this.parent.grid.getCurrentViewRecords();\n                if (records[index].expanded) {\n                    index += findChildrenRecords(records[index]).length;\n                }\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                    movableRows[index + 1][position](movableRows[0]);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = void 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    Edit.prototype.beforeBatchSave = function (e) {\n        beforeBatchSaveAction(e, this.parent);\n    };\n    Edit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            batchSaveAction(this.parent);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        if (!isBlazor() || !this.parent.isServerRendered) {\n            var data = args.data;\n            var row = args.detailElement.parentElement.previousSibling;\n            var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n            var expandClass_1 = 'e-gridrowindex' + index + 'level' + data.level;\n            var classlist = row.querySelector('.' + expandClass_1).classList;\n            var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass_1); });\n            var newNo = gridClas[0].length;\n            var slicedclas = gridClas.toString().slice(6, newNo);\n            var detailClass = 'e-griddetail' + slicedclas;\n            addClass([args.detailElement.parentElement], detailClass);\n        }\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue } from '@syncfusion/ej2-base';\n/**\n * Content renderer for TreeGrid\n */\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        this.parent[action]('data-ready', this.onDataReady, this);\n        //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n        var fn = function () {\n            _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n            _this.parent.off('content-ready', fn);\n        };\n        this.parent.on('content-ready', fn, this);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!isNullOrUndefined(e.count)) {\n            this.totalRecords = e.count;\n            getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n            var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        }\n        if (!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') {\n            this.contents.scrollTop = 0;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        getValue('observer', this).options.debounceEvent = false;\n        this.observers = new TreeInterSectionObserver(this.parent, getValue('observer', this).element, getValue('observer', this).options);\n        this.contents = this.getPanel().firstChild;\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            this.translateY = scrollArgs.offset.top;\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' && getValue('currentInfo', this).page &&\n            getValue('currentInfo', this).page !== e.virtualInfo.page ? getValue('currentInfo', this) : e.virtualInfo;\n        var cBlock = (info.columnIndexes[0]) - 1;\n        var cOffset = this.getColumnOffset(cBlock);\n        //this.virtualEle.setWrapperWidth(width, ( Browser.isIE || Browser.info.name === 'edge') as boolean);\n        target = this.parent.createElement('tbody');\n        target.appendChild(newChild);\n        var replace = 'replaceWith';\n        this.getTable().querySelector('tbody')[replace](target);\n        if (!this.isExpandCollapse || this.translateY === 0) {\n            getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n        }\n        else {\n            this.isExpandCollapse = false;\n        }\n        setValue('prevInfo', info, this);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1 };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function (args) {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import * as index from './index';\nindex.TreeGrid.Inject(index.Filter, index.Page, index.Sort, index.Reorder, index.Toolbar, index.Aggregate, index.Resize, index.ColumnMenu, index.ExcelExport, index.PdfExport, index.CommandColumn, index.ContextMenu, index.Edit, index.Selection, index.VirtualScroll, index.DetailRow, index.RowDD, index.Freeze);\nexport * from './index';\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","columns","length","findParentRecords","records","datas","i","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","addAction","Array","extend","newRowPosition","k","taskData","hasOwnProperty","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","currentViewRecords","getCurrentViewRecords","unshift","isChildAll","editedData","child","index_1","currentRecords","map","sortSettings","parentUniqueID","indexOf","primaryKeys","data","setRowData","row","getRowByIndex","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","renderModule","cellRender","cell","cells","treeColumnIndex","frozenColumns","column","getColumns","requestType","batchSaveAction","notify","events.crudAction","beforeBatchSaveAction","changedRecords","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","crudAction","Selection","selectedItems","selectedIndexes","addEventListener","getModuleName","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","destroy","args","checkBox","checkWrap","parentsUntil","querySelectorAll","querySelector","rowIndex","closest","getAttribute","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","classList","contains","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","trigger","getCheckboxcolumnIndex","mappingUid","columnIndex","col","showCheckbox","uid","headerCelllength","getHeaderContent","headerElement","rowChkBox","createElement","className","attrs","type","createCheckBox","label","add","style","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","isBlazor","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","_this","indeter","checkChildRecords","this_1","childRecord","currentRecord","checkBoxRecord","checkAll","checkedRecord","recordIndex","checkboxRecord","tr","getRows","movableTr","getMovableDataRows","isSummaryRow","checkedIndex","checkBoxclass","childData","childLength","updatedData","getCheckedrecords","getCheckedRowIndexes","Print","Grid","Inject","GridPrint","printTreeGrid","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","display","proxy_1","parentrec","rec","getValue","cellElement","pad","filterLevel","totalIconsWidth","getColumnByField","field","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","collapsed","allowTextWrap","updateTreeCell","checkboxElement","parseInt","summaryData","rowTemplate","textContent","appendChildren","children","template","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","where","addParams","hasChildMapping","qry","clone","queries","select","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","shift","loadChildOnDemand","getUid","element","id","Math","ceil","random","rowDetails","gridRows","rows","getContentTable","slice","call","parentRow","isServerRendered","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","expandingTd","detailRowModule","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","haveChild","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","parentRecords","treeGridData","currentData","dataStateChange","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","results","filterQuery","searchQuery","fltrQuery","srchQuery","filteredData","srtQry","srt","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","enableVirtualization","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","locale","L10n","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","expandCollapseRequest","expandrow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","nextSibling","previousSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","allowRowDragAndDrop","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","appendTo","renderComplete","destroyTemplateFn","clearTemplate","ej2Grids","gridRendered","setBlazorGUID","bindGridEvents","selectionModule","gridObserver","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","selectionSettings","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","triggerEvents","treeGrid","rowSelecting","rowSelected","rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","recordDoubleClick","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","printComplete","cellEdit","actionFailure","dataBound","updateRowTemplate","updateAltRow","req","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","toolbarClick","callBackPromise","toolbarargs","cancel","cellSelecting","cellselectingArgs","beginEdit","begineditArgs","events_1","boundedEvents","pop","isExpandRefresh","cellSave","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","cellsaveArgs","getElement","promise","beforeBatchSave","batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","dm_1","JsonAdaptor","actionComplete","actionBegin","getSelectedRecords","expandicon","updateTreeGridModel","detailDataBound","contextMenuClick","contextMenuOpen","rowDragStartHelper","rowDragStart","rowDrag","rowDrop","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","dialog","text","l10n","Search","tooltipText","getConstant","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","treeColumn","getColumnByUid","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","refresh","isEdit","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","currentObject","ignoreInArrays","addOnPersist","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","deleteRow","setCellValue","goToPage","pageNo","pagerModule","updateExternalMessage","message","getCellFromIndex","iterateArrayOrObject","item","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","stackedHeader","gridColumns","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","getVisibleColumns","cols","visible","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","collapsingArgs","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","isChild","updateChildOnDemand","displayAction","detailrows","remoteExpand","localExpand","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","getMovableRows","visibleRowCount","gridRow","rcell","arg","getRowsObject","rData","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowIndexes","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","rowDropped","rowsAdded","rowsRemoved","dropPosition","dropIndex","dropRows","draggedRecord","dragRecords","draggedRecord_1","tObj","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","scrollTop","firstElementChild","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","left","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","verticalAlign","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","window","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","targetIndex","isNaN","getTargetIdx","srcControl","selectedRecord","isByMethod","isMultipleGrid","dragLength","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","recordIndex_1","parentIndex","primaryKeyField","deletedRecordCount","draggedRecords","rowDragMoudule","TreeVirtualRowModelGenerator","getDatas","visualData","generateRows","notifyArgs","toString","checkAndResetCache","clear","cache","groups","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","isCsv","Promise","reject","isLocal","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","PdfExport","GridPdf","updatePdfResultModel","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","currentPage","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","saveCell","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","a","tempObj","requiresCount","summaryKey","sumData","types","toLowerCase","val","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","Edit","GridEdit","previousNewRowPosition","internalProperties","beginAdd","keyPressed","contentready","editActionEvents","gridDblClick","savePreviousRowPosition","batchSave","beforeStartEdit","beforeBatchCancel","doubleClickTarget","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","params","getColumnByIndex","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","deleteUniqueID","prom","celleditArgs","request","toolbarID","cellDetails","selectRowIndex","treeColumnIndexValue","form","rowIndex_1","primaryKeys_1","updateCell","aggregateModule","formObj","saveArgs","previousData","previousValue","updateRow","updateIndex","data1","data2","treecell","l","match","focussedElement","activeElement","errors","focus","childs","beginAddEdit","childRecordCount","currentDataIndex","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","expandClass_1","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","contentModule","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","startIndex","endIndex","getModelGenerator","virtualOtherAction","indexModifier","setTop","eventListener","onDataReady","observers","observes","scrollArgs","scrollListeners","totalRecords","setVirtualHeight","getRowHeight","contents","renderTable","debounceEvent","TreeInterSectionObserver","getPanel","info","sentinel","scrollHeight","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","nextSetResIndex","lastIndex","viewInfo","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","page","cBlock","columnIndexes","cOffset","getColumnOffset","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","log","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","GridVirtualScroll","Freeze","FreezeColumn","dblClickHandler","frozenrows","queryselector","freezeModule","index.TreeGrid","index.Filter","index.Page","index.Sort","index.Reorder","index.Toolbar","index.Aggregate","index.Resize","index.ColumnMenu","index.ExcelExport","index.PdfExport","index.CommandColumn","index.ContextMenu","index.Edit","index.Selection","index.VirtualScroll","index.DetailRow","index.RowDD","index.Freeze"],"mappings":"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"}