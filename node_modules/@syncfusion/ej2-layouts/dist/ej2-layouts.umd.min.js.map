{"version":3,"file":"ej2-layouts.umd.min.js","sources":["../src/splitter/splitter.js","../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\nvar BAR_SIZE_DEFAULT = 1;\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], PaneProperties.prototype, \"cssClass\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        _this.templateElement = [];\n        _this.collapseFlag = false;\n        _this.expandFlag = true;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(this.element, newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'cssClass':\n                                        this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.allPanes[index].style.flexBasis = newValSize;\n                                            this.allPanes[index].classList.add(STATIC_PANE);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(this.element, css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.element, this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.collapseFlag = true;\n        this.isCollapsed();\n        this.collapseFlag = false;\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n        EventHandler.add(this.element, 'keydown', this.onMove, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkPaneSize = function (e) {\n        var prePaneSize;\n        var nextPaneSize;\n        var splitBarSize = isNullOrUndefined(this.separatorSize) ? BAR_SIZE_DEFAULT : this.separatorSize;\n        prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n        nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n        if ((this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0)) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis + 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis - 1) + '%';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis - 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis + 1) + '%';\n                }\n            }\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize + splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize < splitBarSize) ? '0px' :\n                        (nextPaneSize - splitBarSize) + 'px';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize < splitBarSize) ? '0px' :\n                        (prePaneSize - splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize + splitBarSize) + 'px';\n                }\n            }\n        }\n    };\n    Splitter.prototype.onMove = function (event) {\n        var index = this.getSeparatorIndex(this.currentSeparator);\n        var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n        var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n        var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n        if (((this.orientation !== 'Horizontal' && event.keyCode === 38) || (this.orientation === 'Horizontal' && event.keyCode === 39) ||\n            (this.orientation === 'Horizontal' && event.keyCode === 37) || (this.orientation !== 'Horizontal' && event.keyCode === 40))\n            && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || (isPrevpaneExpanded) && !isNextpaneCollapsed) &&\n            document.activeElement.classList.contains(SPLIT_BAR)) {\n            this.checkPaneSize(event);\n            this.triggerResizing(event);\n        }\n        else if (event.keyCode === 13 && this.paneSettings[index].collapsible && document.activeElement.classList.contains(SPLIT_BAR)) {\n            if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                this.collapse(index);\n                addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n            }\n            else {\n                this.expand(index);\n                addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n            }\n        }\n    };\n    ;\n    /**\n     * @hidden\n     */\n    Splitter.prototype.sanitizeHelper = function (value) {\n        if (this.enableHtmlSanitizer) {\n            var item = SanitizeHtmlHelper.beforeSanitize();\n            var beforeEvent = {\n                cancel: false,\n                helper: null\n            };\n            extend(item, item, beforeEvent);\n            this.trigger('beforeSanitizeHtml', item);\n            if (item.cancel && !isNullOrUndefined(item.helper)) {\n                value = item.helper(value);\n            }\n            else if (!item.cancel) {\n                value = SanitizeHtmlHelper.serializeValue(item, value);\n            }\n        }\n        return value;\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n        this.restoreElem();\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false,\n            cssClass: ''\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (element, className) {\n        if (className) {\n            addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        var _this = this;\n        this.expandFlag = false;\n        if (!isNullOrUndefined(index)) {\n            this.collapseFlag = true;\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) :\n                    this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n            }\n            var event_1 = { target: targetEle };\n            var eventArgs = this.beforeAction(event_1);\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    var collapsedindex = [];\n                    collapsedindex[0] = index;\n                    var j = 1;\n                    for (var i = 0; i < _this.allPanes.length; i++) {\n                        if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n                            collapsedindex[j] = i;\n                            j++;\n                        }\n                    }\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    collapsedindex = collapsedindex.sort();\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    for (var i = 0; i < collapsedindex.length; i++) {\n                        if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n                            _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                        }\n                    }\n                    for (var i = collapsedindex.length; i > 0; i--) {\n                        if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n                            var targetArrow = _this.targetArrows();\n                            _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n                        }\n                    }\n                    var collapseEventArgs = _this.afterAction(event_1);\n                    _this.trigger('collapsed', collapseEventArgs);\n                    _this.collapseFlag = false;\n                }\n            });\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n        this.expandFlag = true;\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains('e-pane')) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        arrow1.setAttribute('tabindex', '-1');\n        arrow2.setAttribute('tabindex', '-1');\n        arrow1.setAttribute('aria-label', 'Toggle navigation');\n        arrow2.setAttribute('aria-label', 'Toggle navigation');\n        arrow1.setAttribute('type', 'button');\n        arrow2.setAttribute('type', 'button');\n        var size;\n        var proxy;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        separator.setAttribute('tabindex', '0');\n        proxy = this;\n        separator.addEventListener('focus', function () {\n            if (document.activeElement.classList.contains('e-split-bar')) {\n                proxy.currentSeparator = document.activeElement;\n                proxy.currentSeparator.classList.add(SPLIT_BAR_ACTIVE);\n            }\n            proxy.getPaneDetails();\n        });\n        separator.addEventListener('blur', function () {\n            proxy.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        });\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                if (childCount > 1) {\n                    this.updateResizablePanes(i);\n                }\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var paneCount = this.allPanes.length;\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        window.addEventListener('resize', this.reportWindowSize.bind(this));\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        window.removeEventListener('resize', this.reportWindowSize.bind(this));\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.expandFlag) {\n            this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n                if (!beforeExpandArgs.cancel) {\n                    _this.expandPane(e);\n                }\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            });\n        }\n        else {\n            this.expandPane(e);\n        }\n    };\n    Splitter.prototype.expandPane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (!this.previousPane.classList.contains(COLLAPSE_PANE) &&\n            this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.nextPane], EXPAND_PANE);\n            removeClass([this.previousPane], collapseClass);\n            addClass([this.previousPane], EXPAND_PANE);\n            addClass([this.nextPane], collapseClass);\n        }\n        else {\n            removeClass([this.previousPane], collapseClass);\n            removeClass([this.nextPane], EXPAND_PANE);\n        }\n        this.updateIconsOnExpand(e);\n        this.previousPane.setAttribute('aria-expanded', 'true');\n        this.nextPane.setAttribute('aria-expanded', 'false');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.previousPane.classList.remove(EXPAND_PANE);\n            this.previousPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.checkStaticPanes = function () {\n        var staticPane = true;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.allPanes[i].classList.contains(COLLAPSE_PANE) && staticPane) {\n                if (this.allPanes[i].classList.contains(STATIC_PANE)) {\n                    staticPane = true;\n                }\n                else {\n                    staticPane = false;\n                }\n            }\n        }\n        return staticPane;\n    };\n    Splitter.prototype.updateFlexGrow = function (status) {\n        var panes = this.allPanes;\n        for (var i = 0; i < panes.length; i++) {\n            if (panes[i].classList.contains(EXPAND_PANE)) {\n                panes[i].style.flexGrow = '1';\n            }\n            else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n                panes[i].style.flexGrow = '0';\n            }\n            else {\n                panes[i].style.flexGrow = '';\n            }\n            if (status && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                this.nextPane.style.flexGrow = '1';\n            }\n        }\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains('e-collapsed') &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains('e-collapsed') &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.collapseFlag) {\n            this.collapsePane(e);\n        }\n        else {\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    _this.collapsePane(e);\n                    var collapseEventArgs = _this.afterAction(e);\n                    _this.trigger('collapsed', collapseEventArgs);\n                }\n            });\n        }\n    };\n    Splitter.prototype.collapsePane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (this.previousPane.classList.contains(STATIC_PANE) &&\n            !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n            !(collapseCount === this.allPanes.length - 2)) || (this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n        }\n        else {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            addClass([this.nextPane], EXPAND_PANE);\n            addClass([this.previousPane], collapseClass);\n        }\n        this.updateIconsOnCollapse(e);\n        this.previousPane.setAttribute('aria-expanded', 'false');\n        this.nextPane.setAttribute('aria-expanded', 'true');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.nextPane.classList.remove(EXPAND_PANE);\n            this.nextPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.triggerResizing = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n        }\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                _this.checkPaneSize(e);\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth) : (pane.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.currentSeparator, this.order);\n            nextPane = this.getNextPane(this.currentSeparator, this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        this.triggerResizing(e);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n        }\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        template = typeof (template) === 'string' ? this.sanitizeHelper(template) : template;\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && cnt.indexOf('<div>Blazor') === 0) {\n                updateBlazorTemplate(this.element.id + 'content' + this.allPanes.length.toString(), 'ContentTemplate', this.paneSettings[this.allPanes.length - 1]);\n            }\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && val.indexOf('<div>Blazor') === 0) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 0) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n                        this.setCssClass(child[i], this.paneSettings[i].cssClass);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            this.element.innerHTML = this.wrapper.innerHTML;\n            for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed,\n            cssClass: isNullOrUndefined(paneProperties.cssClass) ? '' : paneProperties.cssClass\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.setCssClass(this.allPanes[index], paneProperties.cssClass);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.paneSettings.splice(index, 1);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, isBlazor, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        _this.isBlazor = false;\n        _this.isInlineRendering = false;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n        this.contentTemplateChild = [].slice.call(this.element.children);\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n        if (isBlazor() && this.isInlineRendering) {\n            this.setProperties({ panels: this.panels }, true);\n            this.allowServerDataBinding = true;\n            this.serverDataBind();\n        }\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0\n            && !(this.isBlazor && this.panels.length > 0)) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            this.isInlineRendering = true;\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                this.isBlazor = false;\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.isBlazor = (isBlazor() && this.isServerRendered);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        if (!this.isBlazor) {\n            this.setEnableRtl();\n        }\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                var sanitizedValue = SanitizeHtmlHelper.sanitize(template);\n                return compile((this.enableHtmlSanitizer && typeof (template) === 'string') ? sanitizedValue : template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        if (!this.isBlazor) {\n            addClass([cellElement], [panel, panelTransition]);\n        }\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        if (!this.isBlazor) {\n            cellElement.appendChild(this.panelContent);\n            if (!panelModel.enabled) {\n                this.disablePanel(cellElement);\n            }\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            if (!this.isBlazor) {\n                addClass([headerTemplateElement], [header]);\n            }\n            if (!cellElement.querySelector('.e-panel-header') && !this.isBlazor) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content') && !this.isBlazor) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model, true);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'msie') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            this.isMouseMoveBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        removeClass([el], [dragging]);\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n        var cellElement;\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        if (this.isBlazor) {\n            cellElement = document.getElementById(panel.id);\n        }\n        else {\n            if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n                cellElement = this.contentTemplateChild[index];\n                if (panel.cssClass) {\n                    addClass([cellElement], [panel.cssClass]);\n                }\n                if (panel.id) {\n                    cellElement.setAttribute('id', panel.id);\n                }\n            }\n            else {\n                cellElement = this.createPanelElement(panel.cssClass, panel.id);\n            }\n            cellElement.style.zIndex = '' + panel.zIndex;\n            this.element.appendChild(cellElement);\n        }\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        if (!this.isBlazor) {\n            this.setXYAttributes(cellElement, panel);\n        }\n        else {\n            var bodyElement = cellElement.querySelector('.e-panel-content');\n            if (bodyElement) {\n                var headerHeight = cellElement.querySelector('.e-panel-header') ?\n                    window.getComputedStyle(cellElement.querySelector('.e-panel-header')).height : '0px';\n                var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n                setStyle(bodyElement, { height: contentHeightValue });\n            }\n        }\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        this.allowServerDataBinding = false;\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                if (!(this.isBlazor && this.panels.length > 0)) {\n                    this.setMinMaxValues(cells[j]);\n                }\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false, j);\n                if (!this.isBlazor) {\n                    if (this.enableRtl) {\n                        addClass([cell], 'e-rtl');\n                    }\n                    this.element.appendChild(cell);\n                }\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        var removeableElement = [];\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n                            removeableElement.push(item);\n                        }\n                    });\n                }\n            }\n        });\n        removeableElement.forEach(function (item) {\n            if (removeableElement.indexOf(item) >= 0) {\n                collisionItems.splice(collisionItems.indexOf(item), 1);\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            ignore.push(this.mainElement);\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        if (!this.movePanelCalled) {\n            var collisionInstance = this.getCellInstance(collisions[0].id);\n            this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY });\n        }\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        // updated the panel model array as inTopAdjustable case with floating enabled instead of dragging and extra row\n                        if (this.topAdjustable && this.allowFloating) {\n                            this.updatePanels();\n                            this.updateCloneArrayObject();\n                        }\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        var changedPanels = [];\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        for (var i_3 = 0; i_3 < _this.panels.length; i_3++) {\n                            if (_this.panels[i_3].row !== _this.panelsInitialModel[i_3].row ||\n                                _this.panels[i_3].col !== _this.panelsInitialModel[i_3].col) {\n                                changedPanels.push(_this.panels[i_3]);\n                            }\n                        }\n                        if (changedPanels.length > 0) {\n                            var changedArgs = { changedPanels: changedPanels };\n                            _this.trigger('change', changedArgs);\n                        }\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                        _this.allowServerDataBinding = true;\n                        _this.serverDataBind();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // tslint:disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n            if (isBlazor()) {\n                dragArgs.bindEvents(args.element);\n            }\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     * @param {panel: [`PanelModel`](./panelModel)} panel -  Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.allowServerDataBinding = false;\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel, true);\n        this.panels.push(panelProp);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true, null);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.addPanelCalled = true;\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            if (this.isBlazor) {\n                cell.style.removeProperty('visibility');\n            }\n            this.updatePanelLayout(cell, panelProp);\n            this.addPanelCalled = false;\n        }\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n        this.allowServerDataBinding = true;\n        this.serverDataBind();\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     * @param {panel: [`panelModel`](./panelModel)} panel - Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.removeAllPanel();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     * @param {id: string} id -  Defines the panel ID.\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                this.panels.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {row: number} row - Defines the row of dashboard layout.\n     * @param {col: number} col - Defines the column of dashboard layout.\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        var panelInstance = this.getCellInstance(id);\n        if (col < 0) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - panelInstance.sizeX;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n        this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.updateOldRowColumn();\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.movePanelCalled = false;\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {sizeX: number} sizeX - Defines the sizeX of dashboard layout.\n     * @param {sizeY: number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n    };\n    /**\n     * Destroys the DashboardLayout component\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        while (this.element.firstElementChild) {\n            detach(this.element.firstElementChild);\n        }\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.isBlazor = false;\n        this.initialize();\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels)) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n                        for (var i = 0; i < panelElements.length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = panelElements[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'msie') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","HORIZONTAL_PANE","VERTICAL_PANE","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","SCROLL_PANE","RESIZE_BAR","RESIZABLE_BAR","SPLIT_BAR_HOVER","SPLIT_BAR_ACTIVE","HIDE_HANDLER","DISABLED","COLLAPSIBLE","NAVIGATE_ARROW","ARROW_RIGHT","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","EXPAND_PANE","COLLAPSE_PANE","PANE_HIDDEN","RESIZABLE_PANE","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","templateElement","collapseFlag","expandFlag","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","style","flexBasis","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","css","Browser","info","name","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","renderComplete","onMove","e","currentSeparator","remove","checkPaneSize","prePaneSize","nextPaneSize","splitBarSize","previousPane","offsetWidth","offsetHeight","nextPane","indexOf","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","type","keyCode","addStaticPaneClass","event","getSeparatorIndex","isPrevpaneCollapsed","isPrevpaneExpanded","isNextpaneCollapsed","activeElement","triggerResizing","collapsible","expand","collapse","sanitizeHelper","value","enableHtmlSanitizer","item","SanitizeHtmlHelper","beforeSanitize","extend","cancel","helper","trigger","serializeValue","api","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","paneAPI","slice","forEach","el","detach","restoreElem","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","hideResizer","select","showResizer","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","event_1","eventArgs","beforeAction","beforeCollapseArgs","collapsedindex","sort","collapseEventArgs","afterAction","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","setAttribute","proxy","leftArrow","rightArrow","addMouseActions","addEventListener","getPaneDetails","clonedEle","parentNode","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","reportWindowSize","paneCount","wireResizeEvents","window","bind","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","removeEventListener","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","beforeExpandArgs","expandPane","expandEventArgs","collapseCount","flexStatus","nextElementSibling","collapseClass","updateIconsOnExpand","updateFlexGrow","checkStaticPanes","flexGrow","staticPane","status","panes","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","prevPaneIndex","showCurrentBarIcon","currentBarIndex","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","nextPaneIndex","getPrevBar","nextBar","collapsePane","isBlazor","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","getNextBar","updateBars","paneSize","prePaneDimenson","nextPaneDimension","preventDefault","pointerEvents","resizeStartArgs","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","blazorContain","tempEle","compileElement","childEle","isStringTemplate","updateBlazorTemplate","id","val","prop","eleVal","display","removeProperty","removeAttribute","trim","templateFn","outerHTML","compile","templateFUN","childElement","nodeName","destroy","isDestroyed","attributes","refreshing","body","addPaneClass","removePaneOrders","paneClass","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","preventSelect","dragging","responsive","panelContent","panelContainer","header","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","isInlineRendering","isServerRendered","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","contentTemplateChild","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","allowServerDataBinding","serverDataBind","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","recheck","updateOldRowColumn","getElementById","createSubElement","templateParser","error","sanitizedValue","sanitize","renderTemplate","appendElement","templateElements","append","cellElement","panelModel","panelId","disablePanel","headerTemplateElement","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","isMouseMoveBound","moveResizeHandler","isMouseUpBound","upResizeHandler","closest","args","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","upTarget","undefined","allowFloating","moveItemsUpwards","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","_loop_1","_loop_2","this_1","filter","panel","updatedPanel","updatedRows","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","bodyElement","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","_loop_3","_loop_4","this_2","updatedModels","removeableElement","adjust","resetLayout","addPanelCalled","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","collisionInstance","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","_loop_5","rowVal","this_3","colValue_1","collisionModels1","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","collections","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","changedPanels","panelInstance","i_3","panelsInitialModel","changedArgs","dragStopEventArgs","drag","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","cloneModels","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","serialize","cloneModel","customObject","removeAll","removeAllPanel","removePanel","movePanel","resizePanel","firstElementChild","getDragInstance","draggableInstance","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues"],"mappings":"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"}