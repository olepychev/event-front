{"version":3,"file":"ej2-layouts.min.js","sources":["../../src/splitter/splitter.js","../../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\nvar BAR_SIZE_DEFAULT = 1;\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], PaneProperties.prototype, \"cssClass\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        _this.templateElement = [];\n        _this.collapseFlag = false;\n        _this.expandFlag = true;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(this.element, newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'cssClass':\n                                        this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.allPanes[index].style.flexBasis = newValSize;\n                                            this.allPanes[index].classList.add(STATIC_PANE);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(this.element, css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.element, this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.collapseFlag = true;\n        this.isCollapsed();\n        this.collapseFlag = false;\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n        EventHandler.add(this.element, 'keydown', this.onMove, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkPaneSize = function (e) {\n        var prePaneSize;\n        var nextPaneSize;\n        var splitBarSize = isNullOrUndefined(this.separatorSize) ? BAR_SIZE_DEFAULT : this.separatorSize;\n        prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n        nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n        if ((this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0)) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis + 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis - 1) + '%';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis - 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis + 1) + '%';\n                }\n            }\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize + splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize < splitBarSize) ? '0px' :\n                        (nextPaneSize - splitBarSize) + 'px';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize < splitBarSize) ? '0px' :\n                        (prePaneSize - splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize + splitBarSize) + 'px';\n                }\n            }\n        }\n    };\n    Splitter.prototype.onMove = function (event) {\n        var index = this.getSeparatorIndex(this.currentSeparator);\n        var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n        var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n        var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n        if (((this.orientation !== 'Horizontal' && event.keyCode === 38) || (this.orientation === 'Horizontal' && event.keyCode === 39) ||\n            (this.orientation === 'Horizontal' && event.keyCode === 37) || (this.orientation !== 'Horizontal' && event.keyCode === 40))\n            && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || (isPrevpaneExpanded) && !isNextpaneCollapsed) &&\n            document.activeElement.classList.contains(SPLIT_BAR)) {\n            this.checkPaneSize(event);\n            this.triggerResizing(event);\n        }\n        else if (event.keyCode === 13 && this.paneSettings[index].collapsible && document.activeElement.classList.contains(SPLIT_BAR)) {\n            if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                this.collapse(index);\n                addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n            }\n            else {\n                this.expand(index);\n                addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n            }\n        }\n    };\n    ;\n    /**\n     * @hidden\n     */\n    Splitter.prototype.sanitizeHelper = function (value) {\n        if (this.enableHtmlSanitizer) {\n            var item = SanitizeHtmlHelper.beforeSanitize();\n            var beforeEvent = {\n                cancel: false,\n                helper: null\n            };\n            extend(item, item, beforeEvent);\n            this.trigger('beforeSanitizeHtml', item);\n            if (item.cancel && !isNullOrUndefined(item.helper)) {\n                value = item.helper(value);\n            }\n            else if (!item.cancel) {\n                value = SanitizeHtmlHelper.serializeValue(item, value);\n            }\n        }\n        return value;\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n        this.restoreElem();\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false,\n            cssClass: ''\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (element, className) {\n        if (className) {\n            addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        var _this = this;\n        this.expandFlag = false;\n        if (!isNullOrUndefined(index)) {\n            this.collapseFlag = true;\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) :\n                    this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n            }\n            var event_1 = { target: targetEle };\n            var eventArgs = this.beforeAction(event_1);\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    var collapsedindex = [];\n                    collapsedindex[0] = index;\n                    var j = 1;\n                    for (var i = 0; i < _this.allPanes.length; i++) {\n                        if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n                            collapsedindex[j] = i;\n                            j++;\n                        }\n                    }\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    collapsedindex = collapsedindex.sort();\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    for (var i = 0; i < collapsedindex.length; i++) {\n                        if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n                            _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                        }\n                    }\n                    for (var i = collapsedindex.length; i > 0; i--) {\n                        if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n                            var targetArrow = _this.targetArrows();\n                            _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n                        }\n                    }\n                    var collapseEventArgs = _this.afterAction(event_1);\n                    _this.trigger('collapsed', collapseEventArgs);\n                    _this.collapseFlag = false;\n                }\n            });\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n        this.expandFlag = true;\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains('e-pane')) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        arrow1.setAttribute('tabindex', '-1');\n        arrow2.setAttribute('tabindex', '-1');\n        arrow1.setAttribute('aria-label', 'Toggle navigation');\n        arrow2.setAttribute('aria-label', 'Toggle navigation');\n        arrow1.setAttribute('type', 'button');\n        arrow2.setAttribute('type', 'button');\n        var size;\n        var proxy;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        separator.setAttribute('tabindex', '0');\n        proxy = this;\n        separator.addEventListener('focus', function () {\n            if (document.activeElement.classList.contains('e-split-bar')) {\n                proxy.currentSeparator = document.activeElement;\n                proxy.currentSeparator.classList.add(SPLIT_BAR_ACTIVE);\n            }\n            proxy.getPaneDetails();\n        });\n        separator.addEventListener('blur', function () {\n            proxy.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        });\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                if (childCount > 1) {\n                    this.updateResizablePanes(i);\n                }\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var paneCount = this.allPanes.length;\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        window.addEventListener('resize', this.reportWindowSize.bind(this));\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        window.removeEventListener('resize', this.reportWindowSize.bind(this));\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.expandFlag) {\n            this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n                if (!beforeExpandArgs.cancel) {\n                    _this.expandPane(e);\n                }\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            });\n        }\n        else {\n            this.expandPane(e);\n        }\n    };\n    Splitter.prototype.expandPane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (!this.previousPane.classList.contains(COLLAPSE_PANE) &&\n            this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.nextPane], EXPAND_PANE);\n            removeClass([this.previousPane], collapseClass);\n            addClass([this.previousPane], EXPAND_PANE);\n            addClass([this.nextPane], collapseClass);\n        }\n        else {\n            removeClass([this.previousPane], collapseClass);\n            removeClass([this.nextPane], EXPAND_PANE);\n        }\n        this.updateIconsOnExpand(e);\n        this.previousPane.setAttribute('aria-expanded', 'true');\n        this.nextPane.setAttribute('aria-expanded', 'false');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.previousPane.classList.remove(EXPAND_PANE);\n            this.previousPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.checkStaticPanes = function () {\n        var staticPane = true;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.allPanes[i].classList.contains(COLLAPSE_PANE) && staticPane) {\n                if (this.allPanes[i].classList.contains(STATIC_PANE)) {\n                    staticPane = true;\n                }\n                else {\n                    staticPane = false;\n                }\n            }\n        }\n        return staticPane;\n    };\n    Splitter.prototype.updateFlexGrow = function (status) {\n        var panes = this.allPanes;\n        for (var i = 0; i < panes.length; i++) {\n            if (panes[i].classList.contains(EXPAND_PANE)) {\n                panes[i].style.flexGrow = '1';\n            }\n            else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n                panes[i].style.flexGrow = '0';\n            }\n            else {\n                panes[i].style.flexGrow = '';\n            }\n            if (status && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                this.nextPane.style.flexGrow = '1';\n            }\n        }\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains('e-collapsed') &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains('e-collapsed') &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.collapseFlag) {\n            this.collapsePane(e);\n        }\n        else {\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    _this.collapsePane(e);\n                    var collapseEventArgs = _this.afterAction(e);\n                    _this.trigger('collapsed', collapseEventArgs);\n                }\n            });\n        }\n    };\n    Splitter.prototype.collapsePane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (this.previousPane.classList.contains(STATIC_PANE) &&\n            !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n            !(collapseCount === this.allPanes.length - 2)) || (this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n        }\n        else {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            addClass([this.nextPane], EXPAND_PANE);\n            addClass([this.previousPane], collapseClass);\n        }\n        this.updateIconsOnCollapse(e);\n        this.previousPane.setAttribute('aria-expanded', 'false');\n        this.nextPane.setAttribute('aria-expanded', 'true');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.nextPane.classList.remove(EXPAND_PANE);\n            this.nextPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.triggerResizing = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n        }\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                _this.checkPaneSize(e);\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth) : (pane.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.currentSeparator, this.order);\n            nextPane = this.getNextPane(this.currentSeparator, this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        this.triggerResizing(e);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n        }\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        template = typeof (template) === 'string' ? this.sanitizeHelper(template) : template;\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && cnt.indexOf('<div>Blazor') === 0) {\n                updateBlazorTemplate(this.element.id + 'content' + this.allPanes.length.toString(), 'ContentTemplate', this.paneSettings[this.allPanes.length - 1]);\n            }\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && val.indexOf('<div>Blazor') === 0) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 0) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n                        this.setCssClass(child[i], this.paneSettings[i].cssClass);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            this.element.innerHTML = this.wrapper.innerHTML;\n            for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed,\n            cssClass: isNullOrUndefined(paneProperties.cssClass) ? '' : paneProperties.cssClass\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.setCssClass(this.allPanes[index], paneProperties.cssClass);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.paneSettings.splice(index, 1);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, isBlazor, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        _this.isBlazor = false;\n        _this.isInlineRendering = false;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n        this.contentTemplateChild = [].slice.call(this.element.children);\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n        if (isBlazor() && this.isInlineRendering) {\n            this.setProperties({ panels: this.panels }, true);\n            this.allowServerDataBinding = true;\n            this.serverDataBind();\n        }\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0\n            && !(this.isBlazor && this.panels.length > 0)) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            this.isInlineRendering = true;\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                this.isBlazor = false;\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.isBlazor = (isBlazor() && this.isServerRendered);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        if (!this.isBlazor) {\n            this.setEnableRtl();\n        }\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                var sanitizedValue = SanitizeHtmlHelper.sanitize(template);\n                return compile((this.enableHtmlSanitizer && typeof (template) === 'string') ? sanitizedValue : template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        if (!this.isBlazor) {\n            addClass([cellElement], [panel, panelTransition]);\n        }\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        if (!this.isBlazor) {\n            cellElement.appendChild(this.panelContent);\n            if (!panelModel.enabled) {\n                this.disablePanel(cellElement);\n            }\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            if (!this.isBlazor) {\n                addClass([headerTemplateElement], [header]);\n            }\n            if (!cellElement.querySelector('.e-panel-header') && !this.isBlazor) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content') && !this.isBlazor) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model, true);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'msie') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            this.isMouseMoveBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        removeClass([el], [dragging]);\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n        var cellElement;\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        if (this.isBlazor) {\n            cellElement = document.getElementById(panel.id);\n        }\n        else {\n            if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n                cellElement = this.contentTemplateChild[index];\n                if (panel.cssClass) {\n                    addClass([cellElement], [panel.cssClass]);\n                }\n                if (panel.id) {\n                    cellElement.setAttribute('id', panel.id);\n                }\n            }\n            else {\n                cellElement = this.createPanelElement(panel.cssClass, panel.id);\n            }\n            cellElement.style.zIndex = '' + panel.zIndex;\n            this.element.appendChild(cellElement);\n        }\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        if (!this.isBlazor) {\n            this.setXYAttributes(cellElement, panel);\n        }\n        else {\n            var bodyElement = cellElement.querySelector('.e-panel-content');\n            if (bodyElement) {\n                var headerHeight = cellElement.querySelector('.e-panel-header') ?\n                    window.getComputedStyle(cellElement.querySelector('.e-panel-header')).height : '0px';\n                var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n                setStyle(bodyElement, { height: contentHeightValue });\n            }\n        }\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        this.allowServerDataBinding = false;\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                if (!(this.isBlazor && this.panels.length > 0)) {\n                    this.setMinMaxValues(cells[j]);\n                }\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false, j);\n                if (!this.isBlazor) {\n                    if (this.enableRtl) {\n                        addClass([cell], 'e-rtl');\n                    }\n                    this.element.appendChild(cell);\n                }\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        var removeableElement = [];\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n                            removeableElement.push(item);\n                        }\n                    });\n                }\n            }\n        });\n        removeableElement.forEach(function (item) {\n            if (removeableElement.indexOf(item) >= 0) {\n                collisionItems.splice(collisionItems.indexOf(item), 1);\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            ignore.push(this.mainElement);\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        if (!this.movePanelCalled) {\n            var collisionInstance = this.getCellInstance(collisions[0].id);\n            this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY });\n        }\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        // updated the panel model array as inTopAdjustable case with floating enabled instead of dragging and extra row\n                        if (this.topAdjustable && this.allowFloating) {\n                            this.updatePanels();\n                            this.updateCloneArrayObject();\n                        }\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        var changedPanels = [];\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        for (var i_3 = 0; i_3 < _this.panels.length; i_3++) {\n                            if (_this.panels[i_3].row !== _this.panelsInitialModel[i_3].row ||\n                                _this.panels[i_3].col !== _this.panelsInitialModel[i_3].col) {\n                                changedPanels.push(_this.panels[i_3]);\n                            }\n                        }\n                        if (changedPanels.length > 0) {\n                            var changedArgs = { changedPanels: changedPanels };\n                            _this.trigger('change', changedArgs);\n                        }\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                        _this.allowServerDataBinding = true;\n                        _this.serverDataBind();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // tslint:disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n            if (isBlazor()) {\n                dragArgs.bindEvents(args.element);\n            }\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     * @param {panel: [`PanelModel`](./panelModel)} panel -  Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.allowServerDataBinding = false;\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel, true);\n        this.panels.push(panelProp);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true, null);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.addPanelCalled = true;\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            if (this.isBlazor) {\n                cell.style.removeProperty('visibility');\n            }\n            this.updatePanelLayout(cell, panelProp);\n            this.addPanelCalled = false;\n        }\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n        this.allowServerDataBinding = true;\n        this.serverDataBind();\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     * @param {panel: [`panelModel`](./panelModel)} panel - Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.removeAllPanel();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     * @param {id: string} id -  Defines the panel ID.\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                this.panels.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {row: number} row - Defines the row of dashboard layout.\n     * @param {col: number} col - Defines the column of dashboard layout.\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        var panelInstance = this.getCellInstance(id);\n        if (col < 0) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - panelInstance.sizeX;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n        this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.updateOldRowColumn();\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.movePanelCalled = false;\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {sizeX: number} sizeX - Defines the sizeX of dashboard layout.\n     * @param {sizeY: number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n    };\n    /**\n     * Destroys the DashboardLayout component\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        while (this.element.firstElementChild) {\n            detach(this.element.firstElementChild);\n        }\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.isBlazor = false;\n        this.initialize();\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels)) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n                        for (var i = 0; i < panelElements.length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = panelElements[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'msie') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","STATIC_PANE","RESIZE_BAR","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","templateElement","collapseFlag","expandFlag","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","style","flexBasis","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","css","Browser","info","name","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","renderComplete","onMove","e","currentSeparator","remove","checkPaneSize","prePaneSize","nextPaneSize","splitBarSize","previousPane","offsetWidth","offsetHeight","nextPane","indexOf","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","type","keyCode","addStaticPaneClass","event","getSeparatorIndex","isPrevpaneCollapsed","isPrevpaneExpanded","isNextpaneCollapsed","activeElement","triggerResizing","collapsible","expand","collapse","sanitizeHelper","value","enableHtmlSanitizer","item","SanitizeHtmlHelper","beforeSanitize","beforeEvent","cancel","helper","extend","trigger","serializeValue","api","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","paneAPI","slice","forEach","el","detach","restoreElem","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","hideResizer","select","showResizer","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","targetEle","event_1","eventArgs","beforeAction","beforeCollapseArgs","collapsedindex","sort","collapseEventArgs","afterAction","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","setAttribute","proxy","leftArrow","rightArrow","addMouseActions","addEventListener","getPaneDetails","clonedEle","parentNode","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","reportWindowSize","paneCount","wireResizeEvents","window","bind","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","removeEventListener","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","beforeExpandArgs","expandPane","expandEventArgs","collapseCount","flexStatus","nextElementSibling","collapseClass","updateIconsOnExpand","updateFlexGrow","checkStaticPanes","flexGrow","staticPane","status","panes","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","prevPaneIndex","showCurrentBarIcon","currentBarIndex","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","nextPaneIndex","getPrevBar","nextBar","collapsePane","isBlazor","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","getNextBar","updateBars","paneSize","prePaneDimenson","nextPaneDimension","preventDefault","pointerEvents","resizeStartArgs","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","blazorContain","tempEle","compileElement","childEle","isStringTemplate","updateBlazorTemplate","id","val","prop","eleVal","display","removeProperty","removeAttribute","trim","templateFn","outerHTML","compile","templateFUN","childElement","nodeName","destroy","isDestroyed","attributes","refreshing","body","addPaneClass","removePaneOrders","paneClass","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","isInlineRendering","isServerRendered","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","contentTemplateChild","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","allowServerDataBinding","serverDataBind","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","recheck","updateOldRowColumn","getElementById","createSubElement","templateParser","error","sanitizedValue","sanitize","renderTemplate","appendElement","templateElements","append","cellElement","panelModel","panelId","panelContent","disablePanel","header","headerTemplateElement","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","isMouseMoveBound","moveResizeHandler","isMouseUpBound","upResizeHandler","closest","args","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","upTarget","undefined","allowFloating","moveItemsUpwards","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","this_1","filter","panel","updatedPanel","updatedRows","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","bodyElement","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","this_2","updatedModels","removeableElement","adjust","resetLayout","addPanelCalled","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","collisionInstance","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","this_3","rowVal","colValue_1","collisionModels1","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","collections","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","changedPanels","panelInstance","i_3","panelsInitialModel","changedArgs","dragStopEventArgs","drag","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","cloneModels","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","serialize","cloneModel","customObject","removeAll","removeAllPanel","removePanel","movePanel","resizePanel","firstElementChild","getDragInstance","draggableInstance","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","keyEntity"],"mappings":"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"}